{"version":3,"sources":["api/method.js","api/axios.js","api/index.js","utils/storageUtils.js","utils/sessionUtils.js","views/login/index.js","router/RouteWithSubRoutes.js","config/menulist.js","components/nav/index.js","components/linkbutton/index.js","utils/dateUtils.js","components/header/index.js","views/not-found/not-found.js","utils/constants.js","views/admin/index.js","views/home/index.js","views/category/AddCategoryForm.js","views/category/UpdateCategoryForm.js","utils/modal.js","utils/pagination.js","views/category/index.js","views/product/index.js","views/product/SearchForm.js","views/product/Product.js","views/user/AddStaff.js","views/user/index.js","views/role/addform.js","views/role/authform.js","views/role/index.js","views/charts/Bar.js","views/charts/Pie.js","views/charts/Line.js","views/address/index.js","views/product/UploadPicture.js","views/product/RichText.js","views/product/AddUpdateProduct.js","views/product/ProductDetail.js","router/routes.js","serviceWorker.js","index.js","App.js"],"names":["POST","ajax","url","data","arguments","length","undefined","type","Promise","resolve","reject","axios","get","params","post","then","res","catch","err","message","error","reqLogin","username","password","reqRegister","staff","reqDeleteStaff","staffId","reqUpdateStaff","reqUpdateAvatar","staffAvatar","reqFirstLevelCategorys","reqAddFirstLevelCategory","categoryName","reqUpdateFirstLevelCategory","firstId","reqDeleteCategory","reqSecondaryCategorys","reqAddSecondarCategory","secondaryCategoryName","reqUpdateSecondaryCategory","secondaryId","reqDeleteSecondaryCategory","reqSecondaryId","searchSecondaryValues","reqProducts","currentPage","pageSize","reqUpdateProductStatus","goods_id","goods_status","reqSorterProduct","sorterKeyWord","sorterType","reqOnlySearch","searchValues","reqSearchAndSortProducts","searchAndSortValues","reqDeleteProduct","goodsId","reqUserMsg","userId","reqDeleteFile","fileName","reqAddProduct","productValues","reqUpdateProduct","updateProductValues","reqRoles","reqAddRole","roleValues","reqUpdateRole","role","reqDeleteRole","roleId","reqStaffs","reqAllCount","reqWheater","city","concat","jsonp","status","_data$results$0$weath","results","weather_data","dayPictureUrl","weather","storageUtils","saveStaff","localStorage","setItem","JSON","stringify","getStaff","parse","getItem","removeStaff","removeItem","sessionUtils","sessionStorage","WrappedNormalLoginForm","es_form","create","name","props","errMsg","duration","validatePassword","_ref2","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","rule","value","callback","wrap","_context2","prev","next","Error","test","t0","stop","_x3","_x4","_x5","apply","this","getFieldDecorator","form","react_default","createElement","react_router","to","className","onSubmit","e","preventDefault","validateFields","_ref","_callee","values","user","_context","sent","history","replace","msg","_x","_x2","Item","rules","required","pattern","initialValue","input","prefix","icon","style","color","placeholder","validator","Password","es_button","htmlType","RouteWithSubRoutes","route","exact","path","render","component","assign","routes","menuList","title","key","isPublic","children","SubMenu","siderNav","onChange","str","_this","setState","hasAuth","item","menus","indexOf","getMenuNodes","menu","pathname","location","reduce","preItem","currItem","find","openKey","push","es_menu","react_router_dom","menuNodes","theme","mode","defaultOpenKeys","selectedKeys","Component","withRouter","LinkButton","size","num","dateFomatter","time","date","Date","getFullYear","getMonth","getDate","formatDate","getHours","getMinutes","getSeconds","confirm","Header","state","currentTime","now","logOut","okText","okType","cancelText","width","onOk","do_something","b","console","log","getCityWeather","window","BMap","LocalCity","getTime","getTitle","menulist","titleObj","isFindTitle","forEach","_this2","intervalId","setInterval","clearInterval","_this$state","onClick","src","alt","NotFound","row","es_col","span","PAGE_SIZE","IMG_URL","Content","Sider","Admin","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onCollapse","collapsed","uploadAvatar","info","_sessionUtils$getStaf","avatar","avatarName","file","response","avatarUrl","success","isJpgOrPng","isLt10M","roleRoutes","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","return","layout","breakpoint","collapsible","upload","action","accept","showUploadList","beforeUpload","es_avatar","components_nav","components_header","from","map","Home","productCount","staffCount","categoryCount","getCount","goProduct","goStaff","goCategory","gridStyle","textAlign","height","display","flexDirection","justifyContent","card","bodyStyle","backgroundColor","bordered","Grid","AddCategoryForm","categoryTitle","getForm","disabled","UpdateCategoryForm","getUpdateForm","utils_modal","showUnSelectRowinfo","content","confirmModel","pagination","showTotal","total","showCurrentPage","defaultPageSize","Math","ceil","Category","loading","categorys","isFirstLevelCategory","firstLevelCategoryName","firstLevelCategoryKey","firstLevelCategoryPage","selectedRowKey","modalVisible","initColumns","columns","dataIndex","setSelectedRowKey","record","id","paginationChange","page","getCategorys","result","handleCancel","resetFields","showAddCategoryModal","addCategory","_this$state2","validateCategoryNameUnique","ShowupdateCategory","modal","updateCategory","_this$state3","_ref3","_callee3","_context3","deleteCategory","_this$state4","_callee4","_context4","findSecondaryCategory","_this$state5","showCategorys","_this$state6","_this$state7","marginRight","rowSelection","selectedRowKeys","onSelect","category","visiblebtn","extra","deUpFinTitle","visibility","headStyle","border","padding","table","rowKey","dataSource","showQuickJumper","showSizeChanger","current","pageSizeOptions","onRow","visible","onCancel","category_UpdateCategoryForm","category_AddCategoryForm","Porduct","Option","SearchForm","_props$categorys","searchProduct","getSearchForm","labelCol","xs","wrapperCol","label","es_select","CheckableTag","Product","products","align","sorter","price","editable","goods_hot","tag","changeTitle","checked","popconfirm","goods_title","onConfirm","updateProdudctStatus","cursor","text","product","showDetail","divider","showUpdate","deleteProduct","getAllCategory","getProducts","_result$data","searchCategory","searchInputMsg","objectSpread","productStatus","goodsStatus","_ref4","resetfields","tableOnChange","filters","field","order","_callee5","_context5","parseInt","product_SearchForm","marginTop","AddStaff","setForm","roles","validateTrigger","AddStaff_Option","roleName","PureComponent","user_AddStaff","EditableContext","React","createContext","UserCell","getInput","_this$props","inputType","String","renderCell","_this$props2","editing","index","restProps","objectWithoutProperties","usernameValidate","phoneValidate","emailValidate","passwordValidate","margin","Consumer","User","disablesStyle","editingKey","isEditing","updateStaff","cancel","edit","deleteStaff","getStaffs","staffs","getRoles","showAddStaff","isShowAddStaff","addStaff","createTime","dateFormate","_ref5","_ref6","newStaffs","staffRowIndex","abrupt","toConsumableArray","findIndex","md5","splice","_this3","components","body","cell","col","onCell","Provider","rowClassName","UserForm","AddForm","inputInitialValue","isUpdateRoleName","addform_Item","addform","TreeNode","AuthForm","getMenus","checkedKeys","getTreeNodes","pre","onCheck","rolemenus","split","treeNodes","nextProps","authform_Item","tree","checkable","defaultExpandAll","Role","isShowAdd","isShowAuth","initColumn","event","addRole","authName","roleItem","_result","_role","finish","authTime","updateRole","roleIndex","auth","join","removeUser","deleteRole","i","updateRoleName","createRef","modalTitle","getCheckboxProps","authform_AuthForm","ref","Bar","sales","stores","update","sale","store","getOption","tooltip","legend","xAxis","yAxis","series","lib_default","option","Pie","subtext","x","trigger","formatter","orient","left","radius","center","itemStyle","emphasis","shadowBlur","shadowOffsetX","shadowColor","getOption2","top","textStyle","visualMap","show","min","max","inRange","colorLightness","sort","roseType","normal","labelLine","lineStyle","smooth","length2","animationType","animationEasing","animationDelay","idx","random","Line","Adress","renderMap","Map","centerAndZoom","Point","addControl","MapTypeControl","mapTypes","BMAP_NORMAL_MAP","BMAP_HYBRID_MAP","myAddress","enableScrollWheelZoom","cityName","setCenter","uploadPicture","closePreview","showPreview","previewImg","previewImage","preview","handleUploadChange","fileList","isUpdate","_fileName","getImgs","imgs","uid","uploadButton","listType","onPreview","footer","BraftEditor","use","ColorPicker","includeEditors","RichText","previewWindow","close","open","document","write","buildPreviewHtml","contentChange","editorState","uploadMedia","media","serverUrl","regImg","filemime","xhr","XMLHttpRequest","fd","FormData","addEventListener","progress","loaded","uploadResData","responseText","meta","controls","poster","append","send","myValidateFn","hooksConfig","remove-medias","_removeMedias","fileObj","getProductDetail","toHTML","productDetail","createEditorState","extendControls","braft_editor_dist_default","contentStyle","excludeControls","uploadFn","validateFn","hooks","AddUpdateProduct","categoryOptions","initOptions","firstLevelCategorys","_assertThisInitialize","secondaryCategoryOptions","secondaryCategorys","isLeaf","assertThisInitialized","goods_category_id","getSecondaryCategoryId","_this$product","goods_category_name","selectedOptions","loadSecondaryCategoryData","targetOption","options","submitProduct","goods_details","goods_img","goods_first_categoryName","selectOption","childOption","goods_by_user_id","goods_publish_time","uploadImg","productDetailRT","t1","Number","goBack","goods_price","goods_description","goods_contact_qq","goods_contact_phone","categoryIds","fontSize","verticalAlign","AddUpdateProduct_Item","whitespace","allowClear","input_number","parser","cascader","expandTrigger","loadData","UploadPicture_uploadPicture","productId","RichText_RichText","offset","product_AddUpdateProduct","list","Login","ProductList","userMsg","previewVisible","showBigImg","imgsrc","getPublishGoodsUserMsg","_this$state$userMsg","user_name","user_status","user_img","userStatus","productImgs","productGridStyle","ProductDetail_Item","Meta","description","dangerouslySetInnerHTML","__html","Address","Boolean","hostname","match","ReactDOM","locale_provider","locale","zh_CN","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a96c3cc1.chunk.js","sourcesContent":["export const GET = 'GET';\r\nexport const POST = 'POST';\r\n","import axios from 'axios';\r\nimport { message } from 'antd';\r\nimport { GET } from './method';\r\n\r\nconst ajax = (url, data = {}, type = GET) => {\r\n    let promise;\r\n    return new Promise((resolve, reject) => {\r\n        if (type === GET) {\r\n            promise = axios.get(url, {\r\n                params: data\r\n            });\r\n        } else {\r\n            promise = axios.post(url, data);\r\n        }\r\n        promise\r\n            .then(res => {\r\n                resolve(res.data);\r\n            })\r\n            .catch(err => {\r\n                message.error('请求出错了:' + err.message);\r\n            });\r\n    });\r\n};\r\nexport default ajax;\r\n","import ajax from './axios';\r\nimport { POST } from './method';\r\nimport jsonp from 'jsonp';\r\nimport { message } from 'antd';\r\n//职员登录\r\nexport const reqLogin = (username, password) => ajax('/login', { username, password }, POST);\r\n//职员注册\r\nexport const reqRegister = (staff) => \r\n    ajax('/register',staff,POST);\r\n//删除职员\r\nexport const reqDeleteStaff = (staffId) => \r\n    ajax('/deleteStaff',staffId);    \r\n//更新员工 \r\nexport const reqUpdateStaff = (staff) => \r\n    ajax('/updateStaff',staff,POST);\r\n//修改头像 \r\nexport const reqUpdateAvatar = (staffAvatar) => \r\n    ajax('/updataStaffAvatar',staffAvatar, POST);\r\n//获取一级分类列表\r\nexport const reqFirstLevelCategorys = () => ajax('/productCategory/list');\r\n//添加一级分类列表\r\nexport const reqAddFirstLevelCategory = categoryName => ajax('/productCategory/add', { categoryName }, POST);\r\n//修改一级分类列表\r\nexport const reqUpdateFirstLevelCategory = (firstId, categoryName) =>\r\n    ajax('/productCategory/update', { firstId, categoryName }, POST);\r\n//删除一级分类列表\r\nexport const reqDeleteCategory = firstId => ajax('/productCategory/delete', { firstId });\r\n//获取二级分类列表\r\nexport const reqSecondaryCategorys = firstId => ajax('/productSecondaryCategory/list', { firstId });\r\n//添加二级分类列表\r\nexport const reqAddSecondarCategory = (firstId, secondaryCategoryName) =>\r\n    ajax('/productSecondaryCategory/add', { firstId, secondaryCategoryName }, POST);\r\n//修改二级分类列表\r\nexport const reqUpdateSecondaryCategory = (secondaryId, secondaryCategoryName) =>\r\n    ajax('/productSecondaryCategory/update', { secondaryId, secondaryCategoryName }, POST);\r\n//删除二级分类列表\r\nexport const reqDeleteSecondaryCategory = secondaryId => ajax('/productSecondaryCategory/delete', { secondaryId });\r\n//根据一级分类ID 二级分类名获取二级分类ID\r\nexport const reqSecondaryId = (searchSecondaryValues) => \r\n    ajax('/productSecondaryCategory/findSecondaryId',searchSecondaryValues,POST);\r\n\r\n//获取所有商品列表\r\nexport const reqProducts = (currentPage, pageSize) => ajax('/products/list', { currentPage, pageSize });\r\n//修改商品状态(在售/下架)\r\nexport const reqUpdateProductStatus = (goods_id, goods_status) =>\r\n    ajax('/product/updateStatus', { goods_id, goods_status }, POST);\r\n//当前分页搜索商品\r\nexport const reqSearchProducts = searchValues => ajax('product/searchProduct', searchValues, POST);\r\n//根据某选项排序\r\nexport const reqSorterProduct = (currentPage, pageSize, sorterKeyWord, sorterType) =>\r\n    ajax('/product/sorter', { currentPage, pageSize, sorterKeyWord, sorterType });\r\n//无排序的条件查询\r\nexport const reqOnlySearch = searchValues => ajax('/product/conditionSearch', searchValues, POST);\r\n//带排序的条件查询\r\nexport const reqSearchAndSortProducts = searchAndSortValues =>\r\n    ajax('/product/searchAndSort', searchAndSortValues, POST);\r\n//修改商品图片\r\nexport const reqUpdateProductImg = (productImgs) => \r\n    ajax('/product/updateImgs',productImgs, POST);\r\n\r\n//删除商品\r\nexport const reqDeleteProduct = goodsId => ajax('/product/deleteProduct', goodsId);\r\n//请求用户信息\r\nexport const reqUserMsg = userId => ajax('/user/searchById', userId);\r\n//删除已上传的文件\r\nexport const reqDeleteFile = fileName => ajax('/product/media/delete', fileName, POST);\r\n//添加商品\r\nexport const reqAddProduct = productValues => ajax('/product/addProduct', productValues, POST);\r\n//更新商品信息\r\nexport const reqUpdateProduct = (updateProductValues) => \r\n    ajax('/product/updateProduct',updateProductValues,POST);\r\n//权限设置\r\nexport const reqRoles = () => \r\n    ajax('/role/list');\r\nexport const reqAddRole = (roleValues) => \r\n    ajax('/role/add',roleValues,POST);\r\nexport const reqUpdateRole = (role) => \r\n    ajax('/role/addPermission',role, POST);\r\nexport const reqDeleteRole = (roleId) => \r\n    ajax('/role/deleteRole',{roleId},POST);\r\n//员工管理\r\nexport const reqStaffs = () => \r\n    ajax('/staff/list');\r\n//获取首页信息\r\nexport const reqAllCount = () =>\r\n    ajax('/homedata');\r\n//jsop请求天气信息\r\nexport const reqWheater = city => {\r\n    const url = `http://api.map.baidu.com/telematics/v3/weather?location=${city}&output=json&ak=3p49MVra6urFRGOT9s8UBWr2`;\r\n    return new Promise((resolve, reject) => {\r\n        jsonp(url, {}, (err, data) => {\r\n            if (!err && data.status === 'success') {\r\n                const { dayPictureUrl, weather } = data.results[0].weather_data[0];\r\n                resolve({ dayPictureUrl, weather });\r\n            } else {\r\n                message.error('请求出错了:' + err);\r\n                return;\r\n            }\r\n        });\r\n    });\r\n};\r\n","const USERKEY = 'userkey';\r\n//保存用户信息到浏览器存储，仅当removeItem或手动删除时用户信息丢失\r\nexport default {\r\n    saveStaff(staff){\r\n        localStorage.setItem(USERKEY, JSON.stringify(staff));\r\n    },\r\n    getStaff( ){\r\n        return JSON.parse(localStorage.getItem(USERKEY)) || {};\r\n    },\r\n    removeStaff(){\r\n        localStorage.removeItem(USERKEY);\r\n    }\r\n}\r\n","const USERKEY = 'userkey';\r\n//保存用户信息到浏览器存储，仅当removeItem或手动删除时用户信息丢失\r\nexport default {\r\n    saveStaff( staff ){\r\n        sessionStorage.setItem(USERKEY, JSON.stringify(staff));\r\n    },\r\n    getStaff(){\r\n        return JSON.parse(sessionStorage.getItem(USERKEY)) || {};\r\n    },\r\n    removeStaff(){\r\n        sessionStorage.removeItem(USERKEY);\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './index.less';\r\nimport { Form, Icon, Input, Button, message } from 'antd';\r\nimport { reqLogin } from '../../api';\r\nimport { Redirect } from 'react-router-dom';\r\nimport storageUtils from '../../utils/storageUtils';\r\nimport sessionUtils from '../../utils/sessionUtils';\r\n\r\nconst Login = props => {\r\n    let handleSubmit = e => {\r\n        e.preventDefault();\r\n        props.form.validateFields(async (err, values) => {\r\n            const { username, password } = values;\r\n            if (!err) {\r\n                let user = await reqLogin(username, password);\r\n                if (user.status === 0) {\r\n                    //保存到localstorage, 浏览器再次启动访问该web站点获取相应用户信息\r\n                    storageUtils.saveStaff(user.data);\r\n                    //session保持web站点浏览器未关闭时的用户信息\r\n                    sessionUtils.saveStaff(user.data);\r\n                    props.history.replace('/');\r\n                } else {\r\n                    error(user.msg, 2);\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    //登录失败提示信息\r\n    const error = (errMsg, duration) => {\r\n        message.error(errMsg, duration);\r\n    };\r\n    //validator验证密码框输入合法性\r\n    let validatePassword = async (rule, value, callback) => {\r\n        try {\r\n            if (!value) {\r\n                throw new Error('密码不能为空');\r\n            } else if (!/^[\\w@]{4,10}$/.test(value)) {\r\n                throw new Error('密码仅含数字字母_@,4-10位)');\r\n            }\r\n        } catch (err) {\r\n            callback(err);\r\n        }\r\n    };\r\n\r\n    const { getFieldDecorator } = props.form;\r\n    if (sessionUtils.getStaff().staff) {\r\n        return <Redirect to=\"/\" />;\r\n    } else {\r\n        return (\r\n            <div className=\"login clearmargin\">\r\n                <div className=\"mallmanasys-info\">\r\n                    <h1>二手商城管理系统</h1>\r\n                    <p className=\"mallmanasys-alias\">Second-hand mall management system</p>\r\n                    <p className=\"mallmanasys-author\">— 魏琴</p>\r\n                </div>\r\n                <Form onSubmit={handleSubmit} className=\"login-form\">\r\n                    <Form.Item>\r\n                        {getFieldDecorator('username', {\r\n                            rules: [\r\n                                {\r\n                                    required: true,\r\n                                    message: '用户名不能为空'\r\n                                },\r\n                                {\r\n                                    pattern: /^[\\u4E00-\\u9FA5\\w@]+$/,\r\n                                    message: '用户名仅含数字字母中文字符_@'\r\n                                }\r\n                            ],\r\n                            initialValue: 'root'\r\n                        })(\r\n                            <Input\r\n                                prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                placeholder=\"Username\"\r\n                            />\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        {getFieldDecorator('password', {\r\n                            rules: [\r\n                                {\r\n                                    validator: validatePassword\r\n                                }\r\n                            ],\r\n                            initialValue: 'root'\r\n                        })(\r\n                            <Input.Password\r\n                                placeholder=\"input password\"\r\n                                prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            />\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item className=\"login-btn\">\r\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                            登录\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n};\r\nconst WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(Login);\r\nexport default WrappedNormalLoginForm;\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom';\r\n\r\nexport default function RouteWithSubRoutes(route) {\r\n    if(route.exact){\r\n        return (\r\n            <Route\r\n                path={route.path}\r\n                exact\r\n                render={\r\n                    (props) => (\r\n                        <route.component {...props} routes={route.routes}/>\r\n                    )\r\n                }\r\n            ></Route>\r\n        )\r\n    }else{\r\n        return (\r\n            <Route\r\n                path={route.path}\r\n                render={\r\n                    (props) => (\r\n                        <route.component {...props} routes={route.routes}/>\r\n                    )\r\n                }\r\n            ></Route>\r\n        )\r\n    }\r\n}\r\n","const menuList = [\r\n    {\r\n        title: '首页', // 菜单标题名称\r\n        key: '/home', // 对应的path\r\n        icon: 'home', // 图标名称\r\n        isPublic: true // 公开的\r\n    },\r\n    {\r\n        title: '商品',\r\n        key: '/products',\r\n        icon: 'appstore',\r\n        children: [\r\n            // 子菜单列表\r\n            {\r\n                title: '品类管理',\r\n                key: '/products/category',\r\n                icon: 'bars'\r\n            },\r\n            {\r\n                title: '商品管理',\r\n                key: '/products/product',\r\n                icon: 'tool'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: '员工管理',\r\n        key: '/user',\r\n        icon: 'user'\r\n    },\r\n    {\r\n        title: '权限设置',\r\n        key: '/role',\r\n        icon: 'safety'\r\n    },\r\n    {\r\n        title: '可视化数据',\r\n        key: '/charts',\r\n        icon: 'area-chart',\r\n        children: [\r\n            {\r\n                title: '柱形图',\r\n                key: '/charts/bar',\r\n                icon: 'bar-chart'\r\n            },\r\n            {\r\n                title: '折线图',\r\n                key: '/charts/line',\r\n                icon: 'line-chart'\r\n            },\r\n            {\r\n                title: '饼图',\r\n                key: '/charts/pie',\r\n                icon: 'pie-chart'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: '地址',\r\n        key: '/address',\r\n        icon: 'environment'\r\n    },\r\n];\r\n\r\nexport default menuList;\r\n","import React, { Component } from 'react';\r\nimport menuList from '../../config/menulist';\r\nimport { Menu, Icon } from 'antd';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport sessionUtils from '../../utils/sessionUtils';\r\nimport './nav.less';\r\nconst { SubMenu } = Menu;\r\nclass siderNav extends Component {\r\n    onChange = str => {\r\n        this.setState({ str });\r\n    };\r\n\r\n    //判断当前登陆用户对某个菜单是否有权限\r\n    hasAuth = item => {\r\n        const { key } = item;\r\n        //当前用户菜单项\r\n        const menus = sessionUtils.getStaff().menus;\r\n        //当前用户权限存在则初始相应菜单项\r\n        if (menus.indexOf(key) !== -1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    // 递归生成菜单\r\n    // getMenuNodes = menu => {\r\n    //     return menu.map(item => {\r\n    //         if (item.children) {\r\n    //             return (\r\n    //                 <SubMenu\r\n    //                     key={item.key}\r\n    //                     title={\r\n    //                         <span>\r\n    //                             <Icon type={item.icon} />\r\n    //                             <span>{item.title}</span>\r\n    //                         </span>\r\n    //                     }\r\n    //                 >\r\n    //                     {this.getMenuNodes(item.children)}\r\n    //                 </SubMenu>\r\n    //             );\r\n    //         } else {\r\n    //             return (\r\n    //                 <Menu.Item key={item.key}>\r\n    //                     <Icon type={item.icon} />\r\n    //                    <span> {currItem.title}</span>\r\n    //                 </Menu.Item>\r\n    //             );\r\n    //         }\r\n    //     });\r\n    // };\r\n    //reduce递归生成menu\r\n    getMenuNodes = menu => {\r\n        const { pathname } = this.props.location;\r\n        return menu.reduce((preItem, currItem) => {\r\n            if (this.hasAuth(currItem)) {\r\n                if (currItem.children) {\r\n                    const cItem = currItem.children.find(value => pathname.indexOf(value.key) === 0);\r\n                    if (cItem) {\r\n                        this.openKey = currItem.key;\r\n                    }\r\n                    preItem.push(\r\n                        <SubMenu\r\n                            key={currItem.key}\r\n                            title={\r\n                                <span>\r\n                                    <Icon type={currItem.icon} />\r\n                                    <span>{currItem.title}</span>\r\n                                </span>\r\n                            }\r\n                        >\r\n                            {this.getMenuNodes(currItem.children)}\r\n                        </SubMenu>\r\n                    );\r\n                } else {\r\n                    preItem.push(\r\n                        <Menu.Item key={currItem.key}>\r\n                            <Link to={currItem.key}>\r\n                                <Icon type={currItem.icon} />\r\n                                <span> {currItem.title}</span>\r\n                            </Link>\r\n                        </Menu.Item>\r\n                    );\r\n                }\r\n            }\r\n            return preItem;\r\n        }, []);\r\n    };\r\n    \r\n    componentWillMount() {\r\n        this.menuNodes = this.getMenuNodes(menuList);\r\n    }\r\n    render() {\r\n        let { pathname } = this.props.location;\r\n        if (pathname.indexOf('/products/product') === 0) {\r\n            pathname = '/products/product';\r\n        }\r\n        const openKey = this.openKey;\r\n        return (\r\n            <div >\r\n                <Menu theme=\"dark\" mode=\"inline\" className=\"nav\" defaultOpenKeys={[openKey]} selectedKeys={[pathname]}>\r\n                    {this.menuNodes}\r\n                </Menu>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default withRouter(siderNav);\r\n","import React from 'react'\r\nimport './linkbutton.less'\r\n/*\r\n外形像链接的按钮\r\n */\r\nexport default function LinkButton(props) {\r\n  return <button {...props} className=\"link-button\"></button>\r\n}","function size(num) {\r\n    return num >= 10 ? num : '0' + num;\r\n}\r\nconst formatDate = time => {\r\n    if (!time) return '';\r\n    let date = new Date(time);\r\n    return (\r\n        date.getFullYear() +\r\n        '-' +\r\n        size(date.getMonth() + 1) +\r\n        '-' +\r\n        size(date.getDate()) +\r\n        ' ' +\r\n        size(date.getHours()) +\r\n        ':' +\r\n        size(date.getMinutes()) +\r\n        ':' +\r\n        size(date.getSeconds())\r\n    );\r\n};\r\nexport const dateFomatter = (time) => {\r\n    if (!time) return '';\r\n    let date = new Date(time);\r\n    return date.getFullYear() +''+ size(date.getMonth() + 1) + ''+ size(date.getDate());\r\n    \r\n}\r\n\r\nexport default formatDate;\r\n","import React, { Component } from 'react';\r\nimport LinkButton from '../linkbutton';\r\nimport './header.less';\r\nimport { reqWheater } from '../../api';\r\nimport sessionUtils from '../../utils/sessionUtils';\r\nimport storageUtils from '../../utils/storageUtils';\r\nimport formatDate from '../../utils/dateUtils';\r\nimport { withRouter } from 'react-router-dom';\r\nimport menuList from '../../config/menulist';\r\nimport { Modal } from 'antd';\r\nconst { confirm } = Modal;\r\n\r\nclass Header extends Component {\r\n    state = {\r\n        dayPictureUrl: '',\r\n        weather: '',\r\n        currentTime: formatDate(Date.now()),\r\n    };\r\n    //退出登录\r\n    logOut = () => {\r\n        const { history } = this.props;\r\n        confirm({\r\n            title: '是否确定退出系统?',\r\n            okText: '确定',\r\n            okType: 'primary',\r\n            cancelText: '取消',\r\n            className: 'logoutconfirm',\r\n            width: 280,\r\n            onOk() {\r\n                sessionUtils.removeStaff();\r\n                storageUtils.removeStaff();\r\n                history.replace('/login');\r\n            }\r\n        });\r\n    };\r\n\r\n    do_something = (a, b) => {\r\n        console.log(a, b);\r\n    };\r\n\r\n    getCityWeather = () => {\r\n        let myCity = new window.BMap.LocalCity();\r\n        myCity.get(async (city) => {\r\n            const { dayPictureUrl, weather } = await reqWheater(city.name);\r\n            this.setState({\r\n                dayPictureUrl,\r\n                weather\r\n            });\r\n        });\r\n    };\r\n\r\n    getTime = () => {\r\n        let time = Date.now();\r\n        this.setState({\r\n            currentTime: formatDate(time)\r\n        });\r\n    };\r\n\r\n    //递归menu获取当前路由的标题名\r\n    getTitle = menulist => {\r\n        let titleObj = {\r\n            title: '',\r\n            isFindTitle: false\r\n        };\r\n        const { pathname } = this.props.location;\r\n        menulist.forEach(item => {\r\n            if (item.key === pathname) {\r\n                titleObj.title = item.title;\r\n                titleObj.isFindTitle = true;\r\n            } else if (item.children && !titleObj.isFindTitle) {\r\n                // debugger\r\n                titleObj = this.getTitle(item.children);\r\n            }\r\n        });\r\n        return titleObj;\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.intervalId = setInterval(() => {\r\n            this.getTime();\r\n        }, 1000);\r\n        this.getCityWeather();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.intervalId);\r\n    }\r\n    render() {\r\n        let titleObj = this.getTitle(menuList);\r\n        const {pathname} = this.props.location;\r\n        if(pathname.indexOf('/products/product') === 0){\r\n            titleObj = {\r\n                isFindTitle: true,\r\n                title: '商品管理'\r\n            }\r\n        }\r\n        const { currentTime, dayPictureUrl, weather} = this.state;\r\n        return (\r\n            <div className=\"header\">\r\n                <div className=\"header-top\">\r\n                    <span>欢迎,</span>\r\n                    <span>{sessionUtils.getStaff().staff.username}</span>\r\n                    <LinkButton onClick={this.logOut}>退出</LinkButton>\r\n                </div>\r\n                <div className=\"header-bottom\">\r\n                    <div className=\"header-bottom-left\">{titleObj.title}</div>\r\n                    <div className=\"header-bottom-right\">\r\n                        <span>{currentTime}</span>\r\n                        <img src={dayPictureUrl} alt=\"weather\" />\r\n                        <span>{weather}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import React, {Component} from 'react'\r\nimport {Button, Row, Col} from 'antd'\r\nimport './not-found.less'\r\n/*\r\n前台404页面\r\n */\r\nexport default class NotFound extends Component {\r\n  render() {\r\n    return (\r\n\r\n      <Row className='not-found'>\r\n        <Col span={12} className='left'></Col>\r\n        <Col span={12} className='right'>\r\n          <h1>404</h1>\r\n          <h2>抱歉，你访问的页面不存在</h2>\r\n          <div>\r\n            <Button type='primary' onClick={() => this.props.history.replace('/home')}>\r\n              回到首页\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}","export const PAGE_SIZE = 6;\r\n// export const IMG_URL = 'http://localhost:7777/upload/' // 服务器图片\r\nexport const IMG_URL = 'http://106.14.121.224:7777/upload/' // 服务器图片","import React, { Component } from 'react';\r\nimport { Switch, Redirect, Route } from 'react-router-dom';\r\nimport { Layout, Avatar, Upload, message } from 'antd';\r\nimport RouteWithSubRoutes from '../../router/RouteWithSubRoutes';\r\nimport Nav from '../../components/nav';\r\nimport Header from '../../components/header';\r\nimport sessionUtils from '../../utils/sessionUtils';\r\nimport storageUtils from '../../utils/storageUtils';\r\nimport './admin.less';\r\nimport NotFound from '../not-found/not-found';\r\nimport { IMG_URL } from '../../utils/constants';\r\nimport { reqUpdateAvatar, reqDeleteFile } from '../../api';\r\nconst { Content, Sider } = Layout;\r\n\r\nexport default class Admin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const { staff } = sessionUtils.getStaff();\r\n        let avatarUrl;\r\n        if (!staff) {\r\n            avatarUrl = '';\r\n        } else {\r\n            avatarUrl = staff.avatar;\r\n        }\r\n        this.state = {\r\n            collapsed: false,\r\n            avatarUrl //头像数据\r\n        };\r\n    }\r\n\r\n    onCollapse = collapsed => {\r\n        this.setState({ collapsed });\r\n    };\r\n\r\n    beforeUpload(file) {\r\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n        if (!isJpgOrPng) {\r\n            message.error('请选择图片文件');\r\n        }\r\n        const isLt10M = file.size / 1024 / 1024 < 10;\r\n        if (!isLt10M) {\r\n            message.error('图片不能超过10M');\r\n        }\r\n        return isJpgOrPng && isLt10M;\r\n    }\r\n\r\n    uploadAvatar = async info => {\r\n        if (info.file.status === 'done') {\r\n            let res = info.file.response;\r\n            this.setState({ avatarUrl: res.data.fileName });\r\n            if (res.status === 0) {\r\n                const { staffId, avatar } = sessionUtils.getStaff().staff;\r\n                let avatarName = res.data.fileName;\r\n                await reqDeleteFile({ fileName: avatar });\r\n                let result = await reqUpdateAvatar({ staffId, avatar: avatarName });\r\n                if (result.status === 0) {\r\n                    sessionUtils.getStaff().staff.avatar = avatarName;\r\n                    storageUtils.getStaff().staff.avatar = avatarName;\r\n                    message.success('修改头像成功!');\r\n                } else {\r\n                    message.success('修改头像失败!');\r\n                }\r\n            }\r\n        }\r\n    };\r\n    render() {\r\n        const user = sessionUtils.getStaff();\r\n        // 如果没有登录跳转到登录界面\r\n        if (JSON.stringify(user) === '{}') {\r\n            // 自动跳转到登陆(在render()中)\r\n            return <Redirect to=\"/login\" />;\r\n        }\r\n        let { routes } = this.props;\r\n        let menus = sessionUtils.getStaff().menus;\r\n        let roleRoutes = [];\r\n        //更据相应角色权限注册路由\r\n        for (let route of routes) {\r\n            for (let path of menus) {\r\n                if (route.path === path) {\r\n                    roleRoutes.push(route);\r\n                }\r\n            }\r\n        }\r\n        const { avatarUrl } = this.state;\r\n        return (\r\n            <Layout className=\"mall-layout \">\r\n                <Sider\r\n                    breakpoint=\"md\"\r\n                    collapsible\r\n                    collapsed={this.state.collapsed}\r\n                    onCollapse={this.onCollapse}\r\n                    className=\"sider\"\r\n                >\r\n                    <div className=\"logo\">\r\n                        <Upload\r\n                            action=\"/product/img/upload\"\r\n                            accept=\"image/*\"\r\n                            name=\"image\"\r\n                            showUploadList={false}\r\n                            beforeUpload={this.beforeUpload}\r\n                            onChange={this.uploadAvatar}\r\n                        >\r\n                            <Avatar size={64} src={IMG_URL + avatarUrl} />\r\n                        </Upload>\r\n                    </div>\r\n                    <Nav />\r\n                </Sider>\r\n                <Layout className=\"content-layout \">\r\n                    <Header />\r\n                    <Content className=\"content-body clearmargin\">\r\n                        <Switch>\r\n                            <Redirect exact from=\"/\" to=\"/home\" />\r\n                            {roleRoutes.map((route, key) => (\r\n                                <RouteWithSubRoutes {...route} key={key} />\r\n                            ))}\r\n                            <Route component={NotFound} />\r\n                        </Switch>\r\n                    </Content>\r\n                </Layout>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Icon, Card, message } from 'antd';\r\nimport { reqAllCount } from '../../api';\r\nimport './home.less';\r\n\r\nexport default class Home extends Component {\r\n    state = {\r\n        productCount: 0,\r\n        staffCount: 0,\r\n        categoryCount: 0\r\n    };\r\n    getCount = async () => {\r\n        let res = await reqAllCount();\r\n        if (res.status === 0) {\r\n            this.setState({\r\n                productCount: res.data.productCount,\r\n                staffCount: res.data.staffCount,\r\n                categoryCount: res.data.categoryCount\r\n            })\r\n        } else {\r\n            message.error(res.msg);\r\n        }\r\n    };\r\n    componentDidMount() {\r\n        this.getCount();\r\n    }\r\n    goProduct = () => {\r\n        this.props.history.push('/products/product');\r\n    }\r\n    goStaff = () => {\r\n        this.props.history.push('/user');        \r\n    }\r\n    goCategory = () => {\r\n        this.props.history.push('/products/category');                \r\n    }\r\n    render() {\r\n        const gridStyle = {\r\n            width: '25%',\r\n            textAlign: 'center',\r\n            height: '160px',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n        };\r\n        const cardBodyStyle = {\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            backgroundColor: '#f0f2f5'\r\n        }\r\n        const { productCount, staffCount, categoryCount } = this.state;\r\n        return (\r\n            <Card className=\"home\" bodyStyle={cardBodyStyle} bordered={false}>\r\n                <Card.Grid style={gridStyle} className=\"grid\" onClick={this.goProduct}>\r\n                    <span>\r\n                        <p className=\"count\">{productCount}</p>\r\n                        <p className=\"desc\">\r\n                            <Icon type=\"shop\" />\r\n                            &nbsp;&nbsp;\r\n                            <span>商品总数</span>\r\n                        </p>\r\n                    </span>\r\n                </Card.Grid>\r\n                <Card.Grid style={gridStyle} className=\"grid\" onClick={this.goStaff}>\r\n                    <span>\r\n                        <p className=\"count\">{staffCount}</p>\r\n                        <p className=\"desc\">\r\n                            <Icon type=\"user\" />\r\n                            &nbsp;&nbsp;\r\n                            <span>员工总数</span>\r\n                        </p>\r\n                    </span>\r\n                </Card.Grid>\r\n                <Card.Grid style={gridStyle} className=\"grid\" onClick={this.goCategory}>\r\n                    <span>\r\n                        <p className=\"count\">{categoryCount}</p>\r\n                        <p className=\"desc\">\r\n                            <Icon type=\"inbox\" />\r\n                            &nbsp;&nbsp;\r\n                            <span>分类总数</span>\r\n                        </p>\r\n                    </span>\r\n                </Card.Grid>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Input } from 'antd';\r\nfunction CategoryForm(props) {\r\n    const { getFieldDecorator } = props.form;\r\n    let { categoryTitle,getForm} = props;\r\n    getForm(props.form);\r\n    return (\r\n        <Form>\r\n            <Form.Item>\r\n               <Input value={categoryTitle} disabled></Input>\r\n            </Form.Item>\r\n            <Form.Item>\r\n                {getFieldDecorator('categoryName', {\r\n                    rules: [{ required: true, message: '品类名不能为空' }],\r\n                    initialValue: ''\r\n                })(<Input placeholder=\"请输入品类名称\" />)}\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n}\r\nCategoryForm.propTypes = {\r\n    categoryTitle: PropTypes.string.isRequired,\r\n    getForm: PropTypes.func.isRequired\r\n};\r\nconst AddCategoryForm = Form.create()(CategoryForm);\r\nexport default AddCategoryForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Input } from 'antd';\r\nfunction upCategoryForm(props) {\r\n    const { getFieldDecorator } = props.form;\r\n    let { getUpdateForm, categoryName} = props;\r\n    getUpdateForm(props.form);\r\n    return (\r\n        <Form>\r\n            <Form.Item>\r\n                {getFieldDecorator('categoryName', {\r\n                    rules: [{ required: true, message: '品类名不能为空' }],\r\n                    initialValue: categoryName\r\n                })(<Input />)}\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n}\r\nupCategoryForm.propTypes = {\r\n    categoryName: PropTypes.string.isRequired,\r\n    getUpdateForm: PropTypes.func.isRequired\r\n};\r\nconst UpdateCategoryForm = Form.create()(upCategoryForm);\r\nexport default UpdateCategoryForm;\r\n","import React from 'react'\r\nimport { Modal } from 'antd';\r\nconst { confirm, info } = Modal;\r\n\r\n//未选中某行数据提示信息\r\nconst showUnSelectRowinfo = () => {\r\n    info({\r\n        title: '温馨提示',\r\n        content: <div>请先选择某行数据</div>,\r\n        okText: '关闭',\r\n        width: 330\r\n    });\r\n};\r\n//确认对话框\r\nconst confirmModel = (\r\n    title,\r\n    callback,\r\n    okType = 'primary',\r\n    okText = '确定',\r\n    cancelText = '取消',\r\n    width = 260\r\n) => {\r\n    confirm({\r\n        title: title,\r\n        okText: okText,\r\n        okType: okType,\r\n        cancelText: cancelText,\r\n        className: 'logoutconfirm',\r\n        width: width,\r\n        onOk() {\r\n            callback();\r\n        }\r\n    });\r\n};\r\nexport default {\r\n    showUnSelectRowinfo,\r\n    confirmModel\r\n};\r\n","const showTotal = (total) => {\r\n    return `共${total}条`;\r\n}\r\nconst showCurrentPage = (total, defaultPageSize) => {\r\n    return Math.ceil(total/defaultPageSize);\r\n}\r\nexport default {\r\n    showTotal,\r\n    showCurrentPage\r\n}","import React, { Component } from 'react';\r\nimport { Card, Button, Table, Modal, message, Icon } from 'antd';\r\nimport {\r\n    reqFirstLevelCategorys,\r\n    reqAddFirstLevelCategory,\r\n    reqUpdateFirstLevelCategory,\r\n    reqDeleteCategory,\r\n    reqSecondaryCategorys,\r\n    reqAddSecondarCategory,\r\n    reqUpdateSecondaryCategory,\r\n    reqDeleteSecondaryCategory\r\n} from '../../api';\r\nimport AddCategoryForm from './AddCategoryForm';\r\nimport UpdateCategoryForm from './UpdateCategoryForm';\r\nimport modal from '../../utils/modal';\r\nimport pagination from '../../utils/pagination';\r\nimport { PAGE_SIZE} from '../../utils/constants';\r\nimport LinkButton from '../../components/linkbutton';\r\nimport './category.less';\r\n\r\n\r\nexport default class Category extends Component {\r\n    state = {\r\n        loading: false, //是否正在获取数据中\r\n        categorys: [], //table的品类表的datasource\r\n        isFirstLevelCategory: true, //当前处于一级品类或是二级品类\r\n        firstLevelCategoryName: '', //跳转二级页面时保存状态，一级品类名称\r\n        firstLevelCategoryKey: '', //跳转二级页面时保存状态，一级品类名称ID,\r\n        firstLevelCategoryPage: 1,//跳转二级页面时保存状态，保存处于何页\r\n        selectedRowKey: '', //指定RowSelction中单选表格选中的哪一项\r\n        currentPage: 1, //指定当前分页处于那一页\r\n        modalVisible: 0 //标识添加/更新/删除的对话框框是否显示, 0:都不显示, 1: 显示添加， 2:显示更新 3:表示删除\r\n    };\r\n    //初始化列名\r\n    initColumns = () => {\r\n        this.columns = [\r\n            {\r\n                title: '品类编号',\r\n                dataIndex: 'id',\r\n                width: '40%'\r\n            },\r\n            {\r\n                title: '品类名称',\r\n                dataIndex: 'name'\r\n            }\r\n        ];\r\n    };\r\n    //点击表格某行单选框选中\r\n    setSelectedRowKey = (record) => {\r\n        this.setState({\r\n            selectedRowKey: record.id\r\n        });\r\n        //当前选中某行的品类名称\r\n        this.categoryName = record.name;\r\n    };\r\n    //分页切换当前页面\r\n    paginationChange = (page) => {\r\n        this.setState({\r\n            currentPage: page,\r\n            selectedRowKey: ''\r\n        })\r\n        this.categoryName='';\r\n    }\r\n    //根据是否处于一级品类或者二级品类获取表的一级品类/二级品类数据源\r\n    getCategorys = async () => {\r\n        this.setState({\r\n            loading: true\r\n        });\r\n        const { isFirstLevelCategory, firstLevelCategoryKey } = this.state;\r\n        let result;\r\n        if (isFirstLevelCategory) {\r\n            result = await reqFirstLevelCategorys();\r\n        } else {\r\n            result = await reqSecondaryCategorys(firstLevelCategoryKey);\r\n        }\r\n        if (result.status === 0) {\r\n            this.setState({\r\n                loading: false,\r\n                categorys: result.data\r\n            });\r\n        }\r\n    };\r\n    //隐藏modal对话框，重置表单\r\n    handleCancel = e => {\r\n        this.setState({\r\n            modalVisible: 0\r\n        });\r\n        this.form.resetFields();\r\n    };\r\n    //显示添加品类的modal对话框\r\n    showAddCategoryModal = () => {\r\n        this.setState({\r\n            modalVisible: 1\r\n        });\r\n    };\r\n    //根据是否为一级品类或者二级品类，添加相应的品类名称(一级品类名称不可重复，二级品类名称可以重复)\r\n    addCategory = e => {\r\n        //禁止冒泡\r\n        e.preventDefault();\r\n        //提交添加分类表单并验证\r\n        this.form.validateFields(async (err, values) => {\r\n            if (!err) {\r\n                const { isFirstLevelCategory, firstLevelCategoryKey } = this.state;\r\n                const {categoryName} = values;\r\n                let result;\r\n                if (isFirstLevelCategory) {\r\n                    result = await reqAddFirstLevelCategory(categoryName);\r\n                } else {\r\n                    result = await reqAddSecondarCategory(firstLevelCategoryKey, categoryName);\r\n                }\r\n                if (result.status === 0) {\r\n                    this.categoryName = result.data.name;\r\n                    let currentPage = pagination.showCurrentPage(this.state.categorys.length + 1, PAGE_SIZE);\r\n                    this.getCategorys();\r\n                    this.setState({\r\n                        modalVisible: 0,\r\n                        selectedRowKey: result.data.id,\r\n                        currentPage\r\n                    });\r\n                    this.form.resetFields();\r\n                } else {\r\n                    //后台验证品类名必须唯一\r\n                    message.error(result.msg);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    //验证品类名必须唯一\r\n    validateCategoryNameUnique = categoryName => {\r\n        const { categorys } = this.state;\r\n        for (let value of categorys) {\r\n            if (value.name === categoryName) {\r\n                message.error('品类名重复，请更换其余品类名');\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n\r\n    //modalVisible === 2时显示更新品类modal对话框\r\n    ShowupdateCategory = () => {\r\n        if (!this.categoryName) {\r\n            modal.showUnSelectRowinfo();\r\n        } else {\r\n            this.setState({\r\n                modalVisible: 2\r\n            });\r\n        }\r\n    };\r\n    //根据是否为一级品类或二级品类更新品类名称\r\n    updateCategory = e => {\r\n        e.preventDefault();\r\n        const { selectedRowKey, isFirstLevelCategory } = this.state;\r\n        this.form.validateFields(async (err, values) => {\r\n            const categoryName = values.categoryName;\r\n            if (!err) {\r\n                if (categoryName !== this.categoryName) {\r\n                    if (this.validateCategoryNameUnique(categoryName)) {\r\n                        let result;\r\n                        if (isFirstLevelCategory) {\r\n                            result = await reqUpdateFirstLevelCategory(selectedRowKey, categoryName);\r\n                        } else {\r\n                            result = await reqUpdateSecondaryCategory(selectedRowKey, categoryName);\r\n                        }\r\n                        if (result.status === 0) {\r\n                            this.getCategorys();\r\n                            this.categoryName = categoryName;\r\n                        }\r\n                        this.setState({\r\n                            modalVisible: 0\r\n                        });\r\n                        this.form.resetFields();\r\n                    }\r\n                } else {\r\n                    this.setState({\r\n                        modalVisible: 0\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    };\r\n    //根据品类ID删除品类数据，删除一级品类时将同时将删掉二级品类\r\n    deleteCategory = () => {\r\n        const { selectedRowKey, isFirstLevelCategory } = this.state;\r\n        if (!this.categoryName) {\r\n            modal.showUnSelectRowinfo();\r\n            return;\r\n        }\r\n        let title = `确定删除品类${this.categoryName}?`;\r\n        modal.confirmModel(title, async () => {\r\n            let result;\r\n            console.log(selectedRowKey);\r\n            if (isFirstLevelCategory) {\r\n                result = await reqDeleteCategory(selectedRowKey);\r\n            } else {\r\n                result = await reqDeleteSecondaryCategory(selectedRowKey);\r\n            }\r\n            if (result.status === 0) {\r\n                this.getCategorys();\r\n                this.categoryName = '';\r\n                this.setState({\r\n                    selectedRowKey: ''\r\n                })\r\n            }\r\n        });\r\n    };\r\n    //根据一级品类id获取而二级品类列表\r\n    findSecondaryCategory = () => {\r\n        if (!this.categoryName) {\r\n            modal.showUnSelectRowinfo();\r\n        } else {\r\n            const { selectedRowKey,currentPage } = this.state;\r\n            this.setState(\r\n                {\r\n                    isFirstLevelCategory: false,\r\n                    firstLevelCategoryKey: selectedRowKey,\r\n                    firstLevelCategoryName: this.categoryName,\r\n                    selectedRowKey: '',\r\n                    firstLevelCategoryPage: currentPage,\r\n                    currentPage: 1\r\n                },\r\n                () => {\r\n                    this.getCategorys();\r\n                    this.categoryName = '';\r\n                }\r\n            );\r\n        }\r\n    };\r\n    //点击card标签返回一级界面时显示的文字\r\n    showCategorys = () => {\r\n        const { firstLevelCategoryKey, firstLevelCategoryName, firstLevelCategoryPage } = this.state;\r\n        this.setState(\r\n            {\r\n                isFirstLevelCategory: true,\r\n                selectedRowKey: firstLevelCategoryKey,\r\n                currentPage: firstLevelCategoryPage\r\n            },\r\n            () => {\r\n                this.getCategorys();\r\n                this.categoryName = firstLevelCategoryName;\r\n            }\r\n        );\r\n    };\r\n    //初始品类表列名\r\n    componentWillMount() {\r\n        this.initColumns();\r\n    }\r\n    //挂载组件后获取品类表数据源\r\n    componentDidMount() {\r\n        this.getCategorys();\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            modalVisible,\r\n            isFirstLevelCategory,\r\n            categorys,\r\n            firstLevelCategoryName,\r\n            selectedRowKey,\r\n            loading,\r\n            currentPage\r\n        } = this.state;\r\n        //modal对话框第一个输入框显示的文字\r\n        const categoryTitle = isFirstLevelCategory ? '一级品类列表' : firstLevelCategoryName;\r\n        // card标题\r\n        const title = isFirstLevelCategory ? (\r\n            '一级品类列表'\r\n        ) : (\r\n            <span>\r\n                <LinkButton onClick={this.showCategorys}>一级分类列表</LinkButton>\r\n                <Icon type=\"arrow-right\" style={{ marginRight: 5 }} />\r\n                <span>{firstLevelCategoryName}</span>\r\n            </span>\r\n        );\r\n        let rowSelection = {\r\n            selectedRowKeys: [selectedRowKey],\r\n            type: 'radio',\r\n            onSelect: (category) => { // 选择某个radio时回调\r\n                this.setState({\r\n                    selectedRowKey: category.id\r\n                })\r\n              }\r\n        };\r\n        const addCategorybodyStyle = {\r\n            padding: '0px'\r\n        };\r\n        const addCategoryHeadStyle = {\r\n            border: '1px solid #e8e8e8'\r\n        };\r\n        const visiblebtn = isFirstLevelCategory ? 'visible' : 'hidden';\r\n        const extra = (\r\n            <Button type=\"primary\" icon=\"plus\" onClick={this.showAddCategoryModal}>\r\n                添加\r\n            </Button>\r\n        );\r\n        const deUpFinTitle = (\r\n            <div>\r\n                <Button type=\"primary\" onClick={this.ShowupdateCategory}>\r\n                    修改\r\n                </Button>\r\n                <Button type=\"danger\" onClick={this.deleteCategory}>\r\n                    删除\r\n                </Button>\r\n                <Button type=\"primary\" onClick={this.findSecondaryCategory} style={{ visibility: visiblebtn }}>\r\n                    查看子分类\r\n                </Button>\r\n            </div>\r\n        );\r\n        return (\r\n            <Card title={title} extra={extra} className=\"category\">\r\n                <Card\r\n                    title={deUpFinTitle}\r\n                    headStyle={addCategoryHeadStyle}\r\n                    bodyStyle={addCategorybodyStyle}\r\n                    bordered={false}\r\n                    className=\"category-card\"\r\n                >\r\n                    <Table\r\n                        bordered\r\n                        rowKey=\"id\"\r\n                        rowSelection={rowSelection}\r\n                        columns={this.columns}\r\n                        dataSource={categorys}\r\n                        loading={loading}\r\n                        pagination={{\r\n                            size: 'small',\r\n                            defaultPageSize: PAGE_SIZE,\r\n                            showQuickJumper: true,\r\n                            showSizeChanger: true,\r\n                            current: currentPage,\r\n                            pageSizeOptions: [''+PAGE_SIZE, ''+PAGE_SIZE*2, ''+PAGE_SIZE*3, ''+ PAGE_SIZE*4],\r\n                            showTotal: pagination.showTotal,\r\n                            onChange: this.paginationChange\r\n                        }}\r\n                        onRow={(record) => {\r\n                            return {\r\n                                onClick: () => {\r\n                                    this.setSelectedRowKey(record);\r\n                                }\r\n                            };\r\n                        }}\r\n                    />\r\n                    <Modal\r\n                        title=\"更新品类\"\r\n                        visible={modalVisible === 2}\r\n                        onOk={this.updateCategory}\r\n                        onCancel={this.handleCancel}\r\n                    >\r\n                        <UpdateCategoryForm\r\n                            categoryName={this.categoryName}\r\n                            getUpdateForm={form => {\r\n                                this.form = form;\r\n                            }}\r\n                        />\r\n                    </Modal>\r\n                </Card>\r\n\r\n                <Modal\r\n                    title=\"添加分类\"\r\n                    visible={modalVisible === 1}\r\n                    onOk={this.addCategory}\r\n                    onCancel={this.handleCancel}\r\n                >\r\n                    <AddCategoryForm\r\n                        categoryTitle={categoryTitle}\r\n                        getForm={form => {\r\n                            this.form = form;\r\n                        }}\r\n                    />\r\n                </Modal>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Switch, Redirect, Route } from 'react-router-dom';\r\nimport RouteWithSubRoutes from '../../router/RouteWithSubRoutes';\r\nimport NotFound from '../not-found/not-found';\r\nexport default class Porduct extends Component {\r\n    render() {\r\n        const { routes } = this.props;\r\n        return (\r\n            //注册商品管理的路由\r\n            <Switch>\r\n                <Redirect exact from=\"/products/product\" to=\"/products/product/showproduct\" />\r\n                {routes.map((route, key) => (\r\n                    <RouteWithSubRoutes {...route} key={key} />\r\n                ))}\r\n                <Route component={NotFound} />\r\n            </Switch>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Input, Select, Button } from 'antd';\r\nconst { Option } = Select;\r\nconst SearForm = props => {\r\n    const { categorys = [], searchProduct, form, getSearchForm, resetFields } = props;\r\n    const { getFieldDecorator } = form;\r\n    getSearchForm(form);\r\n    \r\n    const formItemLayout = {\r\n        labelCol: {\r\n            xs: { span: 7 }\r\n        },\r\n        wrapperCol: {\r\n            xs: { span: 17 }\r\n        }\r\n    };\r\n    return (\r\n        <Form layout=\"inline\" {...formItemLayout}>\r\n            <Form.Item label=\"查询品类\">\r\n                {getFieldDecorator('searchCategory', {\r\n                    initialValue: 'allCategory'\r\n                })(\r\n                    <Select style={{ width: 160 }}>\r\n                        <Option value=\"allCategory\">全部</Option>\r\n                        {categorys.map(category => (\r\n                            <Option value={category.id} key={category}>\r\n                                {category.name}\r\n                            </Option>\r\n                        ))}\r\n                    </Select>\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item label=\"查询方式\" >\r\n                {getFieldDecorator('searchWays', {\r\n                    initialValue: 'goods_title'\r\n                })(\r\n                    <Select style={{ width: 160 }}>\r\n                        <Option value=\"goods_title\">按商品名称查询</Option>\r\n                        <Option value=\"goods_description\">按商品详情查询</Option>\r\n                    </Select>\r\n                )}\r\n            </Form.Item>\r\n\r\n            <Form.Item>{getFieldDecorator('searchInputMsg', {})(<Input placeholder=\"请输入查询内容\" />)}</Form.Item>\r\n            <Form.Item>\r\n                <Button type=\"primary\" icon=\"search\" onClick={searchProduct} htmlType=\"submit\">\r\n                    查询\r\n                </Button>\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Button onClick={resetFields}>重置</Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\nSearForm.propTypes = {\r\n    getSearchForm: PropTypes.func.isRequired,\r\n    searchProduct: PropTypes.func.isRequired,\r\n    resetFields: PropTypes.func.isRequired\r\n};\r\nconst SearchForm = Form.create()(SearForm);\r\nexport default SearchForm;\r\n","import React, { Component } from 'react';\r\nimport { Card, Table, Divider, Tag, Popconfirm, Button } from 'antd';\r\nimport SearchForm from './SearchForm';\r\nimport LinkButton from '../../components/linkbutton';\r\nimport {\r\n    reqFirstLevelCategorys,\r\n    reqProducts,\r\n    reqUpdateProductStatus,\r\n    reqOnlySearch,\r\n    reqSorterProduct,\r\n    reqSearchAndSortProducts,\r\n    reqDeleteProduct\r\n} from '../../api';\r\nimport { PAGE_SIZE } from '../../utils/constants';\r\nimport pagination from '../../utils/pagination';\r\nconst { CheckableTag } = Tag;\r\nexport default class Product extends Component {\r\n    state = {\r\n        categorys: [], //一级品类数据\r\n        total: 0, //商品的总数量\r\n        loading: false, //渲染表格数据是否加载中\r\n        products: [], //商品数据\r\n        currentPage: 1, //当前处于哪一页\r\n        searchValues: {}, //查询信息参数\r\n        sorterKeyWord: '', //排序关键字\r\n        sorterType: '', //排序方式 升序/降序\r\n        pageSize: 6 //当前页面显示数据条数\r\n    };\r\n\r\n    //初始化商品列\r\n    initColumns = () => {\r\n        this.columns = [\r\n            {\r\n                title: '商品名称',\r\n                dataIndex: 'goods_title',\r\n                align: 'center'\r\n            },\r\n            {\r\n                title: '商品描述',\r\n                width: '35%',\r\n                dataIndex: 'goods_description',\r\n                align: 'center'\r\n            },\r\n            {\r\n                title: '商品品类',\r\n                dataIndex: 'goods_first_categoryName',\r\n                align: 'center'\r\n            },\r\n            {\r\n                title: '价格',\r\n                dataIndex: 'goods_price',\r\n                key: 'price',\r\n                sorter: true,\r\n                render: price => '¥' + price,\r\n                align: 'center'\r\n            },\r\n            {\r\n                title: '点击量',\r\n                dataIndex: 'goods_hot',\r\n                key: 'hot',\r\n                align: 'center',\r\n                sorter: true,\r\n                editable: true,\r\n                render: goods_hot => {\r\n                    return <Tag>{goods_hot}</Tag>;\r\n                }\r\n            },\r\n            {\r\n                title: '状态',\r\n                dataIndex: 'goods_status',\r\n                key: 'status',\r\n                align: 'center',\r\n                render: (goods_status, record) => {\r\n                    let title = goods_status ? '下架' : '上架';\r\n                    let changeTitle = goods_status ? '上架' : '下架';\r\n                    let checked = goods_status ? false : true;\r\n                    return (\r\n                        <Popconfirm\r\n                            title={`确定${changeTitle}${record.goods_title}商品吗?`}\r\n                            onConfirm={() => this.updateProdudctStatus(record.goods_id, checked)}\r\n                            className=\"popconfirm\"\r\n                        >\r\n                            <span>\r\n                                <CheckableTag checked={checked} style={{cursor: 'point'}}>{title}</CheckableTag>\r\n                            </span>\r\n                        </Popconfirm>\r\n                    );\r\n                }\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'action',\r\n                align: 'center',\r\n                render: (text, product) => {\r\n                    return (\r\n                        <span>\r\n                            <LinkButton onClick={() => this.showDetail(product)}>详情</LinkButton>\r\n                            <Divider type=\"vertical\" />\r\n                            <LinkButton onClick={() => this.showUpdate(product)}>修改</LinkButton>\r\n                            <Divider type=\"vertical\" />\r\n                            <Popconfirm\r\n                                title={`确定删除商品${product.goods_title}吗?`}\r\n                                onConfirm={() => this.deleteProduct(product.goods_id)}\r\n                            >\r\n                                <LinkButton>删除</LinkButton>\r\n                            </Popconfirm>\r\n                        </span>\r\n                    );\r\n                }\r\n            }\r\n        ];\r\n    };\r\n    //显示商品详情界面\r\n    showDetail = product => {\r\n        sessionStorage.setItem('product', JSON.stringify(product)) ;\r\n        this.props.history.push('/products/product/productdetail');\r\n    };\r\n\r\n    //显示修改商品界面\r\n    showUpdate = product => {\r\n        sessionStorage.setItem('product', JSON.stringify(product));\r\n        this.props.history.push('/products/product/editproduct');\r\n    };\r\n    getAllCategory = async () => {\r\n        let result = await reqFirstLevelCategorys();\r\n        if (result.status === 0) {\r\n            this.setState({\r\n                categorys: result.data\r\n            });\r\n        }\r\n    };\r\n    getProducts = async currentPage => {\r\n        //保存查询的某一页\r\n        this.setState({\r\n            loading: true,\r\n            currentPage\r\n        });\r\n        const { searchValues, sorterKeyWord, sorterType, pageSize } = this.state;\r\n        let result;\r\n        //分页查询排序为一体的查找 有查询条件=>有排序的条件查询和无排序的条件查询 无查询条件=>排序查询和非排序查询\r\n        //当选择为全部，查询输入框为空时不进入条件查询\r\n        if (\r\n            JSON.stringify(searchValues) !== '{}' &&\r\n            (searchValues.searchCategory !== 'allCategory' || searchValues.searchInputMsg)\r\n        ) {\r\n            if (sorterKeyWord && sorterType) {\r\n                result = await reqSearchAndSortProducts({\r\n                    currentPage,\r\n                    pageSize,\r\n                    sorterKeyWord,\r\n                    sorterType,\r\n                    ...searchValues\r\n                });\r\n            } else {\r\n                result = await reqOnlySearch({ currentPage, pageSize, ...searchValues });\r\n            }\r\n        } else {\r\n            //无查询条件时的查询\r\n            if (sorterKeyWord && sorterType) {\r\n                result = await reqSorterProduct(currentPage, pageSize, sorterKeyWord, sorterType);\r\n            } else {\r\n                result = await reqProducts(currentPage, pageSize);\r\n            }\r\n        }\r\n        this.setState({ loading: false });\r\n        if (result.status === 0) {\r\n            const { total, products } = result.data;\r\n            this.setState({\r\n                products,\r\n                total\r\n            });\r\n        }\r\n    };\r\n    //商品上架/下架状态修改\r\n    updateProdudctStatus = async (goods_id, productStatus) => {\r\n        const { currentPage } = this.state;\r\n        let goodsStatus = productStatus ? 1 : 0;\r\n        const result = await reqUpdateProductStatus(goods_id, goodsStatus);\r\n        if (result.status === 0) {\r\n            this.getProducts(currentPage);\r\n        }\r\n    };\r\n    //根据用户选择查询相应数据信息\r\n    searchProduct = e => {\r\n        e.preventDefault();\r\n        this.form.validateFields(async (err, values) => {\r\n            if (!err) {\r\n                this.setState({ searchValues: values }, () => {\r\n                    this.getProducts(1);\r\n                });\r\n            }\r\n        });\r\n    };\r\n    //重置查询表单\r\n    resetfields = e => {\r\n        e.preventDefault();\r\n        this.form.resetFields();\r\n        this.setState(\r\n            {\r\n                searchValues: {}\r\n            },\r\n            () => {\r\n                this.getProducts(1);\r\n            }\r\n        );\r\n    };\r\n    //表格排序仅排序当前页\r\n    tableOnChange = (pagination, filters, sorter) => {\r\n        let sorterKeyWord = sorter.field;\r\n        let sorterType;\r\n        if (sorter.order === 'ascend') {\r\n            sorterType = 'asc';\r\n        } else if (sorter.order === 'descend') {\r\n            sorterType = 'desc';\r\n        }\r\n        this.setState(\r\n            {\r\n                sorterKeyWord,\r\n                sorterType,\r\n                pageSize: pagination.pageSize\r\n            },\r\n            () => {\r\n                this.getProducts(pagination.current);\r\n            }\r\n        );\r\n    };\r\n    //删除商品\r\n    deleteProduct = async goods_id => {\r\n        let result = await reqDeleteProduct({ goods_id });\r\n        if (result.status === 0) {\r\n            const { currentPage, total } = this.state;\r\n            if (!((total - 1) % PAGE_SIZE) && currentPage !== 1) {\r\n                this.getProducts(currentPage - 1);\r\n            } else {\r\n                this.getProducts(currentPage);\r\n            }\r\n        }\r\n    };\r\n    componentWillMount() {\r\n        this.initColumns();\r\n    }\r\n    componentDidMount() {\r\n        this.getAllCategory();\r\n        let currentPage = sessionStorage.getItem('productCurrentPage');\r\n        if (currentPage) {\r\n            this.getProducts(parseInt(currentPage));\r\n        } else {\r\n            this.getProducts(1);\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        const { currentPage } = this.state;\r\n        sessionStorage.setItem('productCurrentPage', currentPage);\r\n    }\r\n    render() {\r\n        const { categorys, total, products, loading, currentPage } = this.state;\r\n        let title = (\r\n            <SearchForm\r\n                categorys={categorys}\r\n                getSearchForm={form => (this.form = form)}\r\n                searchProduct={this.searchProduct}\r\n                resetFields={this.resetfields}\r\n            />\r\n        );\r\n        const extra = (\r\n            <Button\r\n                type=\"primary\"\r\n                icon=\"plus\"\r\n                onClick={() => {\r\n                    this.props.history.push('/products/product/editproduct');\r\n                }}\r\n            >\r\n                添加商品\r\n            </Button>\r\n        );\r\n        const cardBodyStyle = {\r\n            padding: 0\r\n        };\r\n        return (\r\n            <div>\r\n                <Card title={title} extra={extra} bodyStyle={cardBodyStyle} />\r\n                <Table\r\n                    bordered\r\n                    loading={loading}\r\n                    columns={this.columns}\r\n                    dataSource={products}\r\n                    onChange={this.tableOnChange}\r\n                    rowKey=\"goods_id\"\r\n                    style={{ marginTop: 20, backgroundColor: '#fff' }}\r\n                    pagination={{\r\n                        size: 'small',\r\n                        defaultPageSize: PAGE_SIZE,\r\n                        total: total,\r\n                        current: currentPage,\r\n                        showSizeChanger: true,\r\n                        pageSizeOptions: ['' + PAGE_SIZE, '' + PAGE_SIZE * 2, '' + PAGE_SIZE * 3, '' + PAGE_SIZE * 4],\r\n                        showQuickJumper: true,\r\n                        showTotal: pagination.showTotal\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Select, Input } from 'antd';\r\nconst Item = Form.Item;\r\nconst Option = Select.Option;\r\n/*\r\n添加职员\r\n */\r\nclass AddStaff extends PureComponent {\r\n    static propTypes = {\r\n        setForm: PropTypes.func.isRequired, // 用来传递form对象的函数\r\n        roles: PropTypes.array.isRequired\r\n    };\r\n\r\n    componentWillMount() {\r\n        this.props.setForm(this.props.form);\r\n    }\r\n\r\n    render() {\r\n        const { roles } = this.props;\r\n        const { getFieldDecorator } = this.props.form;\r\n        // 指定Item布局的配置对象\r\n        const formItemLayout = {\r\n            labelCol: { span: 4 }, // 左侧label的宽度\r\n            wrapperCol: { span: 15 } // 右侧包裹的宽度\r\n        };\r\n\r\n        return (\r\n            <Form {...formItemLayout}>\r\n                <Item label=\"用户名\">\r\n                    {getFieldDecorator('username', {\r\n                        rules: [\r\n                            { required: true, message: '用户名不能为空' },\r\n                            {\r\n                                pattern: /^[\\u4E00-\\u9FA5\\w@]+$/,\r\n                                message: '用户名仅含数字字母中文字符_@'\r\n                            }\r\n                        ]\r\n                    })(<Input placeholder=\"请输入用户名\" />)}\r\n                </Item>\r\n\r\n                <Item label=\"密码\">\r\n                    {getFieldDecorator('password', {\r\n                        validateTrigger: 'onBlur',\r\n                        rules: [\r\n                            { required: true, message: '密码不能为空' },\r\n                            {\r\n                                pattern: /^[\\w@]{4,10}$/,\r\n                                message: '密码仅含数字字母_@,4-10位'\r\n                            }\r\n                        ]\r\n                    })(<Input type=\"password\" placeholder=\"请输入密码\" />)}\r\n                </Item>\r\n\r\n                <Item label=\"手机号\">\r\n                    {getFieldDecorator('phone', {\r\n                        validateTrigger: 'onBlur',\r\n                        rules: [\r\n                            { required: true, message: '手机号不能为空' },\r\n                            {\r\n                                pattern: /^1[3456789]\\d{9}$/,\r\n                                message: '请输入正确的手机号码'\r\n                            }\r\n                        ]\r\n                    })(<Input placeholder=\"请输入手机号\"/>)}\r\n                </Item>\r\n                <Item label=\"邮箱\">\r\n                    {getFieldDecorator('email', {\r\n                        validateTrigger: 'onBlur',\r\n                        rules: [\r\n                            { required: true, message: '邮箱不能为空' },\r\n                            {\r\n                                pattern: /^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*\\.[a-zA-Z0-9]{2,6}$/,\r\n                                message: '请输入正确的邮箱地址'\r\n                            }\r\n                        ]\r\n                    })(<Input placeholder=\"请输入邮箱\" />)}\r\n                </Item>\r\n\r\n                <Item label=\"角色\">\r\n                    {getFieldDecorator('roleId', {\r\n                        initialValue: roles[0].roleId\r\n                    })(\r\n                        <Select>\r\n                            {roles.map(role => (\r\n                                <Option key={role.roleId} value={role.roleId}>\r\n                                    {role.roleName}\r\n                                </Option>\r\n                            ))}\r\n                        </Select>\r\n                    )}\r\n                </Item>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form.create()(AddStaff);\r\n","import React from 'react';\r\nimport { Table, Input, Popconfirm, Form, Divider, Card, Button, message, Modal, Select } from 'antd';\r\nimport LinkButton from '../../components/linkbutton';\r\nimport { reqStaffs, reqRoles, reqRegister, reqDeleteStaff, reqUpdateStaff } from '../../api';\r\nimport AddStaff from './AddStaff';\r\nimport dateFormate from '../../utils/dateUtils';\r\nimport md5 from 'blueimp-md5';\r\nimport './staff.less';\r\nconst EditableContext = React.createContext();\r\n\r\nclass UserCell extends React.Component {\r\n    getInput = () => {\r\n        const { roles, inputType } = this.props;\r\n\r\n        if (inputType === 'select') {\r\n            return (\r\n                <Select style={{ width: '100%' }}>\r\n                    {roles.map(role => (\r\n                        <Select.Option key={role.roleId} value={String(role.roleId)}>\r\n                            {role.roleName}\r\n                        </Select.Option>\r\n                    ))}\r\n                </Select>\r\n            );\r\n        } else if (inputType === 'password') {\r\n            return <Input type=\"password\" />;\r\n        } else {\r\n            return <Input />;\r\n        }\r\n    };\r\n\r\n    renderCell = ({ getFieldDecorator }) => {\r\n        const { editing, dataIndex, title, inputType, record, index, children, ...restProps } = this.props;\r\n        const usernameValidate =\r\n            dataIndex === 'username'\r\n                ? {\r\n                      pattern: /^[\\u4E00-\\u9FA5\\w@]+$/,\r\n                      message: '用户名仅含数字字母中文字符_@'\r\n                  }\r\n                : {};\r\n        const phoneValidate =\r\n            dataIndex === 'phone'\r\n                ? {\r\n                      pattern: /^1[3456789]\\d{9}$/,\r\n                      message: '请输入正确的手机号码'\r\n                  }\r\n                : {};\r\n        const emailValidate =\r\n            dataIndex === 'email'\r\n                ? {\r\n                      pattern: /^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*\\.[a-zA-Z0-9]{2,6}$/,\r\n                      message: '请输入正确的邮箱地址'\r\n                  }\r\n                : {};\r\n        const passwordValidate =\r\n            dataIndex === 'password'\r\n                ? {\r\n                      pattern: /^[\\w@]{4,10}$/,\r\n                      message: '密码仅含数字字母_@,4-10位'\r\n                  }\r\n                : {};\r\n        return (\r\n            <td {...restProps}>\r\n                {editing ? (\r\n                    <Form.Item style={{ margin: 0 }}>\r\n                        {getFieldDecorator(dataIndex, {\r\n                            validateTrigger: 'onBlur',\r\n                            rules: [\r\n                                {\r\n                                    required: true,\r\n                                    message: `${title}不能为空!`\r\n                                },\r\n                                usernameValidate,\r\n                                phoneValidate,\r\n                                emailValidate,\r\n                                passwordValidate\r\n                            ],\r\n                            initialValue: dataIndex !== 'roleId' ? record[dataIndex] : String(record[dataIndex])\r\n                        })(this.getInput())}\r\n                    </Form.Item>\r\n                ) : (\r\n                    children\r\n                )}\r\n            </td>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>;\r\n    }\r\n}\r\n\r\nclass User extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            staffs: [], //所有员工\r\n            editingKey: '', //当前编辑行\r\n            isShowAddStaff: false, //显示添加用户\r\n            roles: [] //所有角色列表\r\n        };\r\n    }\r\n\r\n    initColumns = () => {\r\n        this.columns = [\r\n            {\r\n                title: '用户名',\r\n                dataIndex: 'username',\r\n                editable: true,\r\n                align: 'center'\r\n            },\r\n            {\r\n                title: '电话',\r\n                dataIndex: 'phone',\r\n                editable: true,\r\n                align: 'center'\r\n            },\r\n            {\r\n                title: '邮箱',\r\n                dataIndex: 'email',\r\n                editable: true,\r\n                align: 'center'\r\n            },\r\n            // {\r\n            //     title: '注册时间',\r\n            //     dataIndex: 'createTime',\r\n            //     align: 'center'\r\n            // },\r\n            {\r\n                title: '密码',\r\n                dataIndex: 'password',\r\n                align: 'center'\r\n            },\r\n            {\r\n                title: '所属角色',\r\n                dataIndex: 'roleId',\r\n                editable: true,\r\n                align: 'center',\r\n                width: '12%',\r\n                render: roleId => {\r\n                    for (let role of this.state.roles) {\r\n                        if (String(role.roleId) === String(roleId)) {\r\n                            return role.roleName;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                title: '操作',\r\n                dataIndex: 'operation',\r\n                align: 'center',\r\n                width: '11%',\r\n                render: (text, record) => {\r\n                    const { editingKey } = this.state;\r\n                    const editable = this.isEditing(record);\r\n                    const disablesStyle =\r\n                        editingKey === ''\r\n                            ? {}\r\n                            : {\r\n                                  color: '#bfbfbf'\r\n                              };\r\n                    return editable ? (\r\n                        <span>\r\n                            <EditableContext.Consumer>\r\n                                {form => (\r\n                                    <LinkButton onClick={() => this.updateStaff(form, record.staffId)}>保存</LinkButton>\r\n                                )}\r\n                            </EditableContext.Consumer>\r\n                            <Divider type=\"vertical\" />\r\n                            <Popconfirm title={`确定取消编辑吗?`} onConfirm={() => this.cancel(record.staffId)}>\r\n                                <LinkButton>取消</LinkButton>\r\n                            </Popconfirm>\r\n                        </span>\r\n                    ) : record.username === 'root' ? (\r\n                        ''\r\n                    ) : (\r\n                        <span>\r\n                            <LinkButton style={disablesStyle} onClick={() => this.edit(record.staffId)}>\r\n                                编辑\r\n                            </LinkButton>\r\n                            <Divider type=\"vertical\" />\r\n                            <Popconfirm\r\n                                title={`确定删除职员${record.username}吗`}\r\n                                onConfirm={() => {\r\n                                    this.deleteStaff(record.staffId);\r\n                                }}\r\n                            >\r\n                                <LinkButton style={disablesStyle}>删除</LinkButton>\r\n                            </Popconfirm>\r\n                        </span>\r\n                    );\r\n                }\r\n            }\r\n        ];\r\n    };\r\n    //获取所有职员信息\r\n    getStaffs = async () => {\r\n        let result = await reqStaffs();\r\n        if (result.status === 0) {\r\n            this.setState({\r\n                staffs: result.data\r\n            });\r\n        }\r\n    };\r\n    //获取所有角色信息\r\n    getRoles = async () => {\r\n        let result = await reqRoles();\r\n        if (result.status === 0) {\r\n            this.setState({\r\n                roles: result.data\r\n            });\r\n        }\r\n    };\r\n    //显示添加职员对话框\r\n    showAddStaff = () => {\r\n        this.setState({\r\n            isShowAddStaff: true\r\n        });\r\n    };\r\n    //添加职员\r\n    addStaff = () => {\r\n        this.form.validateFields(async (error, values) => {\r\n            if (!error) {\r\n                let createTime = dateFormate(Date.now());\r\n                let result = await reqRegister({ ...values, createTime });\r\n                if (result.status === 0) {\r\n                    this.setState({ isShowAddStaff: false });\r\n                    this.form.resetFields();\r\n                    message.success(`添加职员${values.username}成功`);\r\n                    this.getStaffs();\r\n                } else {\r\n                    message.error(result.msg);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    //删除职员\r\n    deleteStaff = async staffId => {\r\n        let result = await reqDeleteStaff({ staffId });\r\n        if (result.status === 0) {\r\n            this.getStaffs();\r\n        } else {\r\n            message.error(result.message);\r\n        }\r\n    };\r\n    //是否处于编辑状态\r\n    isEditing = record => record.staffId === this.state.editingKey;\r\n    //取消编辑状态\r\n    cancel = () => {\r\n        this.setState({ editingKey: '' });\r\n    };\r\n    //修改职员信息\r\n    updateStaff = (form, staffId) => {\r\n        form.validateFields(async (error, staff) => {\r\n            if (error) {\r\n                return;\r\n            }\r\n            const newStaffs = [...this.state.staffs];\r\n            const staffRowIndex = newStaffs.findIndex(item => staffId === item.staffId);\r\n            if (staffRowIndex > -1) {\r\n                let result = await reqUpdateStaff({ staff: { ...staff }, staffId });\r\n                if (result.status === 0) {\r\n                    const item = newStaffs[staffRowIndex];\r\n                    staff.password = md5(staff.password);\r\n                    newStaffs.splice(staffRowIndex, 1, {\r\n                        ...item,\r\n                        ...staff\r\n                    });\r\n                    this.setState({ staffs: newStaffs, editingKey: '' });\r\n                    message.success(result.msg);\r\n                } else {\r\n                    message.error(result.msg);\r\n                }\r\n            } else {\r\n                //addRow添加一行数据\r\n                newStaffs.push(staff);\r\n                this.setState({ newStaffs: staff, editingKey: '' });\r\n            }\r\n        });\r\n    };\r\n    //进入编辑职员状态\r\n    edit(staffId) {\r\n        this.setState({ editingKey: staffId });\r\n    }\r\n    componentWillMount() {\r\n        this.initColumns();\r\n    }\r\n    componentDidMount() {\r\n        this.getStaffs();\r\n        this.getRoles();\r\n    }\r\n\r\n    render() {\r\n        //默认不显示root用户不可编辑删除修改\r\n        const { staffs, isShowAddStaff, roles } = this.state;\r\n        const title = (\r\n            <span>\r\n                <Button type=\"primary\" onClick={this.showAddStaff}>\r\n                    创建职员\r\n                </Button>\r\n                &nbsp;&nbsp;\r\n            </span>\r\n        );\r\n        const components = {\r\n            body: {\r\n                cell: UserCell\r\n            }\r\n        };\r\n\r\n        const columns = this.columns.map(col => {\r\n            if (!col.editable) {\r\n                return col;\r\n            }\r\n            let inputType;\r\n            if (col.dataIndex === 'roleId') {\r\n                inputType = 'select';\r\n            } else if (col.dataIndex === 'password') {\r\n                inputType = 'password';\r\n            } else {\r\n                inputType = 'text';\r\n            }\r\n            return {\r\n                ...col,\r\n                onCell: record => ({\r\n                    record,\r\n                    roles: [...roles],\r\n                    inputType: inputType,\r\n                    dataIndex: col.dataIndex,\r\n                    title: col.title,\r\n                    editing: this.isEditing(record)\r\n                })\r\n            };\r\n        });\r\n\r\n        return (\r\n            <Card title={title}>\r\n                <EditableContext.Provider value={this.props.form}>\r\n                    <Table\r\n                        rowKey=\"staffId\"\r\n                        components={components}\r\n                        bordered\r\n                        dataSource={staffs}\r\n                        columns={columns}\r\n                        rowClassName=\"editable-row\"\r\n                        pagination={{\r\n                            onChange: this.cancel\r\n                        }}\r\n                    />\r\n                </EditableContext.Provider>\r\n                <Modal\r\n                    title=\"添加职员\"\r\n                    visible={isShowAddStaff}\r\n                    onOk={this.addStaff}\r\n                    onCancel={() => {\r\n                        this.form.resetFields();\r\n                        this.setState({ isShowAddStaff: false });\r\n                    }}\r\n                >\r\n                    <AddStaff setForm={form => (this.form = form)} roles={roles} />\r\n                </Modal>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\nconst UserForm = Form.create()(User);\r\nexport default UserForm;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Input } from 'antd';\r\n\r\nconst Item = Form.Item;\r\n\r\n/*\r\n添加分类的form组件\r\n */\r\nclass AddForm extends Component {\r\n    static propTypes = {\r\n        setForm: PropTypes.func.isRequired // 用来传递form对象的函数\r\n    };\r\n\r\n    componentWillMount() {\r\n        this.props.setForm(this.props.form);\r\n    }\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        // 指定Item布局的配置对象\r\n        const formItemLayout = {\r\n            labelCol: { span: 4 }, // 左侧label的宽度\r\n            wrapperCol: { span: 15 } // 右侧包裹的宽度\r\n        };\r\n        //判断是否为更新角色名称模式\r\n        const { roleName, isUpdateRoleName } = this.props;\r\n        let inputInitialValue = isUpdateRoleName ? roleName : '';\r\n        return (\r\n            <Form>\r\n                <Item label=\"角色名称\" {...formItemLayout}>\r\n                    {getFieldDecorator('roleName', {\r\n                        initialValue: inputInitialValue,\r\n                        rules: [{ required: true, message: '角色名称必须输入' }]\r\n                    })(<Input placeholder=\"请输入角色名称\" />)}\r\n                </Item>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form.create()(AddForm);\r\n","import React, {PureComponent} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Form,\r\n  Input,\r\n  Tree\r\n} from 'antd'\r\nimport menuList from '../../config/menulist'\r\n\r\nconst Item = Form.Item\r\n\r\nconst { TreeNode } = Tree;\r\n\r\n/*\r\n添加分类的form组件\r\n */\r\nexport default class AuthForm extends PureComponent {\r\n\r\n  static propTypes = {\r\n    role: PropTypes.object\r\n  }\r\n\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    // 根据传入角色的menus生成初始状态\r\n    const {menus} = this.props.role\r\n    let rolemenus;\r\n    if(menus){\r\n      rolemenus = menus.split('#');\r\n    }else{\r\n      rolemenus= [];\r\n    }\r\n    this.state = {\r\n      checkedKeys: rolemenus\r\n    }\r\n  }\r\n\r\n  /*\r\n  为父组件提交获取最新menus数据的方法\r\n   */\r\n  getMenus = () => this.state.checkedKeys\r\n\r\n  getTreeNodes = (menuList) => {\r\n    return menuList.reduce((pre, item) => {\r\n      pre.push(\r\n        <TreeNode title={item.title} key={item.key}>\r\n          {item.children ? this.getTreeNodes(item.children) : null}\r\n        </TreeNode>\r\n      )\r\n      return pre\r\n    }, [])\r\n  }\r\n\r\n  // 选中某个node时的回调\r\n  onCheck = checkedKeys => {\r\n    this.setState({ checkedKeys });\r\n  };\r\n\r\n\r\n  componentWillMount () {\r\n    this.treeNodes = this.getTreeNodes(menuList)\r\n  }\r\n\r\n  // 根据新传入的role来更新checkedKeys状态\r\n  /*\r\n  当组件接收到新的属性时自动调用\r\n   */\r\n  componentWillReceiveProps (nextProps) {\r\n    let menus = nextProps.role.menus\r\n    if(menus){\r\n      menus = menus.split('#');\r\n    }else{\r\n      menus = []\r\n    }\r\n    this.setState({\r\n      checkedKeys: menus\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {role} = this.props\r\n    const {checkedKeys} = this.state\r\n    // 指定Item布局的配置对象\r\n    const formItemLayout = {\r\n      labelCol: { span: 4 },  // 左侧label的宽度\r\n      wrapperCol: { span: 15 }, // 右侧包裹的宽度\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Item label='角色名称' {...formItemLayout}>\r\n          <Input value={role.roleName} disabled/>\r\n        </Item>\r\n\r\n        <Tree\r\n          checkable\r\n          defaultExpandAll={true}\r\n          checkedKeys={checkedKeys}\r\n          onCheck={this.onCheck}\r\n        >\r\n          <TreeNode title=\"平台权限\" key=\"all\">\r\n            {this.treeNodes}\r\n          </TreeNode>\r\n        </Tree>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Card, Button, Table, Modal, message } from 'antd';\r\nimport { PAGE_SIZE } from '../../utils/constants';\r\nimport { reqRoles, reqAddRole, reqUpdateRole, reqDeleteRole } from '../../api';\r\nimport AddForm from './addform';\r\nimport AuthForm from './authform';\r\nimport sessionUtils from '../../utils/sessionUtils';\r\nimport formatDate from '../../utils/dateUtils';\r\nimport storageUtils from '../../utils/storageUtils';\r\nimport modal from '../../utils/modal';\r\nimport pagination from '../../utils/pagination';\r\n\r\nexport default class Role extends Component {\r\n    state = {\r\n        roles: [], // 所有角色的列表\r\n        role: {}, // 选中的role\r\n        isShowAdd: false, // 是否显示添加界面\r\n        isShowAuth: false, // 是否显示设置权限界面\r\n        currentPage: 1 //指定当前分页处于那一页\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.auth = React.createRef();\r\n    }\r\n\r\n    initColumn = () => {\r\n        this.columns = [\r\n            {\r\n                title: '角色名称',\r\n                dataIndex: 'roleName',\r\n                align: 'center'\r\n            },\r\n            {\r\n                title: '创建时间',\r\n                dataIndex: 'createTime',\r\n                align: 'center'\r\n            },\r\n            {\r\n                title: '授权时间',\r\n                dataIndex: 'authTime',\r\n                align: 'center',\r\n                render: formatDate\r\n            },\r\n            {\r\n                title: '授权人',\r\n                dataIndex: 'authName',\r\n                align: 'center'\r\n            }\r\n        ];\r\n    };\r\n\r\n    getRoles = async () => {\r\n        const result = await reqRoles();\r\n        if (result.status === 0) {\r\n            const roles = result.data;\r\n            this.setState({\r\n                roles\r\n            });\r\n        }\r\n    };\r\n    //选中某行\r\n    onRow = role => {\r\n        return {\r\n            onClick: event => {\r\n                // 点击行\r\n                if (role.roleName === '超级管理员') {\r\n                    this.setState({\r\n                        role: {}\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        role\r\n                    });\r\n                }\r\n            }\r\n        };\r\n    };\r\n\r\n    /*\r\n  添加/修改角色\r\n   */\r\n    addRole = () => {\r\n        this.form.validateFields(async (error, values) => {\r\n            if (!error) {\r\n                // 收集数据\r\n                const { roleName } = values;\r\n                let authName = sessionUtils.getStaff().staff.username;\r\n                this.setState({ isShowAdd: false });\r\n                this.form.resetFields();\r\n                //更新角色\r\n                if (this.isUpdateRoleName) {\r\n                    const { role, roles } = this.state;\r\n                    role.roleName = roleName;\r\n                    const result = await reqUpdateRole(role);\r\n                    if (result.status === 0) {\r\n                        for (let roleItem of roles) {\r\n                            if (roleItem.roleId === role.roleId) {\r\n                                roleItem.roleName = roleName;\r\n                            }\r\n                        }\r\n                        this.setState(state => ({\r\n                            roles: [...state.roles]\r\n                        }));\r\n                        this.isUpdateRoleName = false;\r\n                    }\r\n                } else {\r\n                    //添加角色\r\n                    let createTime = formatDate(Date.now());\r\n                    const result = await reqAddRole({ roleName, createTime, authName, authTime: createTime });\r\n                    // 根据结果提示/更新列表显示\r\n                    if (result.status === 0) {\r\n                        const role = result.data;\r\n                        // 更新roles状态: 基于原本状态数据更新\r\n                        let currentPage = pagination.showCurrentPage(this.state.roles.length + 1, PAGE_SIZE);\r\n                        this.setState(state => ({\r\n                            roles: [...state.roles, role],\r\n                            role: { ...role },\r\n                            currentPage\r\n                        }));\r\n                    } else {\r\n                        message.error('添加角色失败: ' + result.msg);\r\n                    }\r\n                }\r\n            } else {\r\n                message.error(`${this.isUpdateRoleName ? '更新' : '添加'}操作失败`);\r\n            }\r\n        });\r\n    };\r\n\r\n    /*\r\n      更新角色权限\r\n       */\r\n    updateRole = async () => {\r\n        // 隐藏确认框\r\n        this.setState({\r\n            isShowAuth: false\r\n        });\r\n        const { role, roles } = this.state;\r\n        // 得到最新的menus\r\n        const menus = this.auth.current.getMenus();\r\n        role.menus = menus.join('#');\r\n        role.authTime = formatDate(Date.now());\r\n        role.authName = sessionUtils.getStaff().staff.username;\r\n\r\n        // 请求更新\r\n        const result = await reqUpdateRole(role);\r\n        if (result.status === 0) {\r\n            // this.getRoles()\r\n            // 如果当前更新的是自己角色的权限, 强制退出\r\n            if (role.roleId === sessionUtils.getStaff().staff.roleId) {\r\n                sessionUtils.removeUser();\r\n                storageUtils.removeUser();\r\n                this.props.history.replace('/login');\r\n                message.success('当前用户角色权限成功');\r\n            } else {\r\n                message.success('设置角色权限成功');\r\n                let roleIndex = roles.findIndex(item => item.roleId === role.roleId);\r\n                roles[roleIndex] = role;\r\n                this.setState({\r\n                    roles: [...roles],\r\n                    role: { ...role }\r\n                });\r\n            }\r\n        }\r\n    };\r\n    //删除角色\r\n    deleteRole = () => {\r\n        const { role, roles } = this.state;\r\n        let title = `确定删除角色${role.roleName}?`;\r\n        modal.confirmModel(title, async () => {\r\n            let result;\r\n            result = await reqDeleteRole(role.roleId);\r\n            if (result.status === 0) {\r\n                for (let i = 0; i < roles.length; i++) {\r\n                    if (roles[i].roleId === role.roleId) {\r\n                        roles.splice(i, 1);\r\n                    }\r\n                }\r\n                this.setState(state => ({\r\n                    roles: [...state.roles],\r\n                    role: {}\r\n                }));\r\n            }\r\n        });\r\n    };\r\n    //分页切换当前页面\r\n    paginationChange = page => {\r\n        this.setState({\r\n            currentPage: page,\r\n            role: {}\r\n        });\r\n    };\r\n    //修改角色\r\n    updateRoleName = () => {\r\n        this.setState({\r\n            isShowAdd: true\r\n        });\r\n        this.isUpdateRoleName = true;\r\n    };\r\n    componentWillMount() {\r\n        this.initColumn();\r\n    }\r\n    //获得角色列表\r\n    componentDidMount() {\r\n        this.getRoles();\r\n    }\r\n\r\n    render() {\r\n        const { roles, role, isShowAdd, isShowAuth, currentPage } = this.state;\r\n        const modalTitle = !this.isUpdateRoleName ? '添加角色' : '修改角色';\r\n        const title = (\r\n            <span>\r\n                <Button type=\"primary\" onClick={() => this.setState({ isShowAdd: true })}>\r\n                    创建角色\r\n                </Button>{' '}\r\n                &nbsp;&nbsp;\r\n                <Button type=\"primary\" disabled={!role.roleId} onClick={() => this.setState({ isShowAuth: true })}>\r\n                    设置角色权限\r\n                </Button>\r\n                &nbsp;&nbsp;\r\n                <Button type=\"primary\" disabled={!role.roleId} onClick={this.updateRoleName}>\r\n                    修改角色\r\n                </Button>\r\n                &nbsp;&nbsp;\r\n                <Button type=\"danger\" disabled={!role.roleId} onClick={this.deleteRole}>\r\n                    删除\r\n                </Button>\r\n            </span>\r\n        );\r\n\r\n        return (\r\n            <Card title={title} >\r\n                <Table\r\n                    bordered\r\n                    rowKey=\"roleId\"\r\n                    dataSource={roles}\r\n                    columns={this.columns}\r\n                    pagination={{\r\n                        size: 'small',\r\n                        defaultPageSize: PAGE_SIZE,\r\n                        showQuickJumper: true,\r\n                        showSizeChanger: true,\r\n                        current: currentPage,\r\n                        pageSizeOptions: ['' + PAGE_SIZE, '' + PAGE_SIZE * 2, '' + PAGE_SIZE * 3, '' + PAGE_SIZE * 4],\r\n                        showTotal: pagination.showTotal,\r\n                        onChange: this.paginationChange\r\n                    }}\r\n                    rowSelection={{\r\n                        type: 'radio',\r\n                        selectedRowKeys: [role.roleId],\r\n                        getCheckboxProps: record => ({\r\n                            disabled: record.roleName === '超级管理员',\r\n                            name: record.roleName\r\n                        }),\r\n                        onSelect: role => {\r\n                            // 选择某个radio时回调\r\n                            this.setState({\r\n                                role\r\n                            });\r\n                        }\r\n                    }}\r\n                    onRow={this.onRow}\r\n                />\r\n\r\n                <Modal\r\n                    title={modalTitle}\r\n                    visible={isShowAdd}\r\n                    onOk={this.addRole}\r\n                    onCancel={() => {\r\n                        this.setState({ isShowAdd: false });\r\n                        this.form.resetFields();\r\n                        this.isUpdateRoleName = false;\r\n                    }}\r\n                >\r\n                    <AddForm\r\n                        setForm={form => (this.form = form)}\r\n                        roleName={role.roleName}\r\n                        isUpdateRoleName={this.isUpdateRoleName}\r\n                    />\r\n                </Modal>\r\n\r\n                <Modal\r\n                    title=\"设置角色权限\"\r\n                    visible={isShowAuth}\r\n                    onOk={this.updateRole}\r\n                    onCancel={() => {\r\n                        this.setState({ isShowAuth: false });\r\n                    }}\r\n                >\r\n                    <AuthForm ref={this.auth} role={role} />\r\n                </Modal>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react'\r\nimport {Card, Button} from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\nexport default class Bar extends Component {\r\n\r\n  state = {\r\n    sales: [5, 20, 36, 10, 10, 20], // 销量的数组\r\n    stores: [6, 10, 25, 20, 15, 10], // 库存的数组\r\n  }\r\n\r\n  update = () => {\r\n    this.setState(state => ({\r\n      sales: state.sales.map(sale => sale + 1),\r\n      stores: state.stores.reduce((pre, store) => {\r\n        pre.push(store-1)\r\n        return pre\r\n      }, []),\r\n    }))\r\n  }\r\n\r\n  /*\r\n  返回柱状图的配置对象\r\n   */\r\n  getOption = (sales, stores) => {\r\n    return {\r\n      title: {\r\n        text: 'ECharts 入门示例'\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data:['销量', '库存']\r\n      },\r\n      xAxis: {\r\n        data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\r\n      },\r\n      yAxis: {},\r\n      series: [{\r\n        name: '销量',\r\n        type: 'bar',\r\n        data: sales\r\n      }, {\r\n        name: '库存',\r\n        type: 'bar',\r\n        data: stores\r\n      }]\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {sales, stores} = this.state\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Button type='primary' onClick={this.update}>更新</Button>\r\n        </Card>\r\n\r\n        <Card title='柱状图一'>\r\n          <ReactEcharts option={this.getOption(sales, stores)} />\r\n        </Card>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Card} from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\nexport default class Pie extends Component {\r\n\r\n  getOption = () => {\r\n    return {\r\n      title : {\r\n        text: '某站点用户访问来源',\r\n        subtext: '纯属虚构',\r\n        x:'center'\r\n      },\r\n      tooltip : {\r\n        trigger: 'item',\r\n        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n      },\r\n      legend: {\r\n        orient: 'vertical',\r\n        left: 'left',\r\n        data: ['直接访问','邮件营销','联盟广告','视频广告','搜索引擎']\r\n      },\r\n      series : [\r\n        {\r\n          name: '访问来源',\r\n          type: 'pie',\r\n          radius : '55%',\r\n          center: ['50%', '60%'],\r\n          data:[\r\n            {value:335, name:'直接访问'},\r\n            {value:310, name:'邮件营销'},\r\n            {value:234, name:'联盟广告'},\r\n            {value:135, name:'视频广告'},\r\n            {value:1548, name:'搜索引擎'}\r\n          ],\r\n          itemStyle: {\r\n            emphasis: {\r\n              shadowBlur: 10,\r\n              shadowOffsetX: 0,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    };\r\n\r\n  }\r\n\r\n  getOption2 = () => {\r\n    return {\r\n      backgroundColor: '#2c343c',\r\n\r\n      title: {\r\n        text: 'Customized Pie',\r\n        left: 'center',\r\n        top: 20,\r\n        textStyle: {\r\n          color: '#ccc'\r\n        }\r\n      },\r\n\r\n      tooltip : {\r\n        trigger: 'item',\r\n        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n      },\r\n\r\n      visualMap: {\r\n        show: false,\r\n        min: 80,\r\n        max: 600,\r\n        inRange: {\r\n          colorLightness: [0, 1]\r\n        }\r\n      },\r\n      series : [\r\n        {\r\n          name:'访问来源',\r\n          type:'pie',\r\n          radius : '55%',\r\n          center: ['50%', '50%'],\r\n          data:[\r\n            {value:335, name:'直接访问'},\r\n            {value:310, name:'邮件营销'},\r\n            {value:274, name:'联盟广告'},\r\n            {value:235, name:'视频广告'},\r\n            {value:400, name:'搜索引擎'}\r\n          ].sort(function (a, b) { return a.value - b.value; }),\r\n          roseType: 'radius',\r\n          label: {\r\n            normal: {\r\n              textStyle: {\r\n                color: 'rgba(255, 255, 255, 0.3)'\r\n              }\r\n            }\r\n          },\r\n          labelLine: {\r\n            normal: {\r\n              lineStyle: {\r\n                color: 'rgba(255, 255, 255, 0.3)'\r\n              },\r\n              smooth: 0.2,\r\n              length: 10,\r\n              length2: 20\r\n            }\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              color: '#c23531',\r\n              shadowBlur: 200,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          },\r\n\r\n          animationType: 'scale',\r\n          animationEasing: 'elasticOut',\r\n          animationDelay: function (idx) {\r\n            return Math.random() * 200;\r\n          }\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card title='饼图一'>\r\n          <ReactEcharts option={this.getOption()} style={{height: 300}}/>\r\n        </Card>\r\n        <Card title='饼图二'>\r\n          <ReactEcharts option={this.getOption2()} style={{height: 300}}/>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from 'react'\r\nimport {Card, Button} from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\nexport default class Line extends Component {\r\n\r\n  state = {\r\n    sales: [5, 20, 36, 10, 10, 20], // 销量的数组\r\n    stores: [6, 10, 25, 20, 15, 10], // 库存的数组\r\n  }\r\n\r\n  update = () => {\r\n    this.setState(state => ({\r\n      sales: state.sales.map(sale => sale + 1),\r\n      stores: state.stores.reduce((pre, store) => {\r\n        pre.push(store-1)\r\n        return pre\r\n      }, []),\r\n    }))\r\n  }\r\n\r\n  /*\r\n  返回柱状图的配置对象\r\n   */\r\n  getOption = (sales, stores) => {\r\n    return {\r\n      title: {\r\n        text: 'ECharts 入门示例'\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data:['销量', '库存']\r\n      },\r\n      xAxis: {\r\n        data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\r\n      },\r\n      yAxis: {},\r\n      series: [{\r\n        name: '销量',\r\n        type: 'line',\r\n        data: sales\r\n      }, {\r\n        name: '库存',\r\n        type: 'line',\r\n        data: stores\r\n      }]\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {sales, stores} = this.state\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Button type='primary' onClick={this.update}>更新</Button>\r\n        </Card>\r\n\r\n        <Card title='折线图一'>\r\n          <ReactEcharts option={this.getOption(sales, stores)} />\r\n        </Card>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Card } from 'antd'\r\nexport default class Adress extends Component {\r\n    renderMap = () => {\r\n        this.map = new window.BMap.Map('address'); // 创建Map实例\r\n        this.map.centerAndZoom(new window.BMap.Point(104.2064182883,30.5668503008), 11); // 初始化地图,设置中心点坐标和地图级别\r\n        //添加地图类型控件\r\n        this.map.addControl(\r\n            new window.BMap.MapTypeControl({\r\n                mapTypes: [window.BMAP_NORMAL_MAP, window.BMAP_HYBRID_MAP]\r\n            })\r\n        );\r\n \r\n        var myCity = new window.BMap.LocalCity();\r\n\t    myCity.get(this.myAddress);\r\n        this.map.enableScrollWheelZoom(true); //开启鼠标滚轮缩放\r\n    };\r\n    //更据ip定位\r\n    myAddress = (result) => {\r\n\t\tvar cityName = result.name;\r\n\t\tthis.map.setCenter(cityName);\r\n\t}\r\n    componentDidMount() {\r\n        this.renderMap();\r\n    }\r\n    render() {\r\n        return (\r\n            <Card>\r\n                <div id=\"address\" style={{width: '100%', height:'550px'}}></div>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Upload, Icon, Modal, message } from 'antd';\r\nimport { reqDeleteFile } from '../../api';\r\nimport PropTypes from 'prop-types';\r\nimport { IMG_URL } from '../../utils/constants';\r\nexport default class uploadPicture extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const { imgs } = this.props;\r\n        let fileList = [];\r\n        if (imgs && imgs.length > 0) {\r\n            fileList = imgs.map((fileName, key) => ({\r\n                uid: -key,\r\n                name: fileName,\r\n                status: 'done',\r\n                url: IMG_URL + fileName\r\n            }));\r\n        }\r\n        this.state = {\r\n            showPreview: false, //是否预览大图\r\n            previewImage: '', //预览大图图片地址\r\n            fileList //保存图片数组\r\n        };\r\n    }\r\n\r\n    //关闭大图预览\r\n    closePreview = () => this.setState({ showPreview: false });\r\n    //预览大图\r\n    previewImg = async file => {\r\n        this.setState({\r\n            previewImage: file.url || file.preview,\r\n            showPreview: true\r\n        });\r\n    };\r\n    //处理上传图片/删除图片操作\r\n    handleUploadChange = async ({ file, fileList }) => {\r\n        if (file.status === 'done') {\r\n            const result = file.response;\r\n            if (result.status === 0) {\r\n                const { fileName, url } = result.data;\r\n                file = fileList[fileList.length - 1];\r\n                file.name = fileName;\r\n                file.url = url;\r\n            } else {\r\n                message.error(result.msg);\r\n            }\r\n        } else if (file.status === 'removed') {\r\n            const { isUpdate } = this.props;\r\n            console.log(isUpdate);\r\n            if (!isUpdate) {\r\n                let fileName = file.name;\r\n                const result = await reqDeleteFile({ fileName });\r\n                if (result.status === 0) {\r\n                    message.success(result.msg);\r\n                }\r\n            }\r\n        }\r\n        this.setState({ fileList });\r\n    };\r\n    //父组件获取上传文件名数组\r\n    getImgs = () => {\r\n        return this.state.fileList.map(file => file.name);\r\n    };\r\n    render() {\r\n        const { showPreview, previewImage, fileList } = this.state;\r\n        const uploadButton = (\r\n            <div>\r\n                <Icon type=\"plus\" />\r\n                <div className=\"ant-upload-text\">Upload</div>\r\n            </div>\r\n        );\r\n        return (\r\n            <div className=\"clearfix\">\r\n                <Upload\r\n                    action=\"/product/img/upload\"\r\n                    accept=\"image/*\"\r\n                    name=\"image\"\r\n                    listType=\"picture-card\"\r\n                    fileList={fileList}\r\n                    onPreview={this.previewImg}\r\n                    onChange={this.handleUploadChange}\r\n                >\r\n                    {fileList.length >= 8 ? null : uploadButton}\r\n                </Upload>\r\n                <Modal visible={showPreview} footer={null} onCancel={this.closePreview}>\r\n                    <img alt=\"添加/修改商品预览\" style={{ width: '100%' }} src={previewImage} />\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nuploadPicture.propTypes = {\r\n    imgs: PropTypes.array\r\n};\r\n","import 'braft-editor/dist/index.css';\r\nimport 'braft-extensions/dist/color-picker.css';\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { message } from 'antd';\r\nimport { reqDeleteFile } from '../../api';\r\nimport BraftEditor from 'braft-editor';\r\nimport ColorPicker from 'braft-extensions/dist/color-picker';\r\n\r\nBraftEditor.use(\r\n    ColorPicker({\r\n        includeEditors: ['editor-with-color-picker'],\r\n        theme: 'light' // 支持dark和light两种主题，默认为dark\r\n    })\r\n);\r\n\r\nexport default class RichText extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { productDetail } = this.props;\r\n        if (productDetail) {\r\n            let editorState = BraftEditor.createEditorState(productDetail);\r\n            this.state = {\r\n                editorState\r\n            };\r\n        } else {\r\n            this.state = {\r\n                editorState: BraftEditor.createEditorState() //富文本初始状态\r\n            };\r\n        }\r\n    }\r\n    //预览功能\r\n    preview = () => {\r\n        if (window.previewWindow) {\r\n            window.previewWindow.close();\r\n        }\r\n\r\n        window.previewWindow = window.open();\r\n        window.previewWindow.document.write(this.buildPreviewHtml());\r\n        window.previewWindow.document.close();\r\n    };\r\n\r\n    buildPreviewHtml() {\r\n        return `\r\n          <!Doctype html>\r\n          <html>\r\n            <head>\r\n              <title>Preview Content</title>\r\n              <style>\r\n                html,body{\r\n                  height: 100%;\r\n                  margin: 0;\r\n                  padding: 0;\r\n                  overflow: auto;\r\n                  background-color: #f1f2f3;\r\n                }\r\n                .container{\r\n                  box-sizing: border-box;\r\n                  width: 1000px;\r\n                  max-width: 100%;\r\n                  min-height: 100%;\r\n                  margin: 0 auto;\r\n                  padding: 30px 20px;\r\n                  overflow: hidden;\r\n                  background-color: #fff;\r\n                  border-right: solid 1px #eee;\r\n                  border-left: solid 1px #eee;\r\n                }\r\n                .container img,\r\n                .container audio,\r\n                .container video{\r\n                  max-width: 100%;\r\n                  height: auto;\r\n                }\r\n                .container p{\r\n                  white-space: pre-wrap;\r\n                  min-height: 1em;\r\n                }\r\n                .container pre{\r\n                  padding: 15px;\r\n                  background-color: #f1f1f1;\r\n                  border-radius: 5px;\r\n                }\r\n                .container blockquote{\r\n                  margin: 0;\r\n                  padding: 15px;\r\n                  background-color: #f1f1f1;\r\n                  border-left: 3px solid #d1d1d1;\r\n                }\r\n              </style>\r\n            </head>\r\n            <body>\r\n              <div class=\"container\">${this.state.editorState.toHTML()}</div>\r\n            </body>\r\n          </html>\r\n        `;\r\n    }\r\n\r\n    contentChange = editorState => {\r\n        this.setState({\r\n            editorState: editorState\r\n        });\r\n    };\r\n    uploadMedia = media => {\r\n        const { file } = media;\r\n        let regImg = /image\\/\\*/;\r\n        let serverUrl;\r\n        let filemime = file.type;\r\n        if (regImg.test(filemime)) {\r\n            serverUrl = '/product/img/upload';\r\n        } else {\r\n            serverUrl = '/product/vedio/upload';\r\n        }\r\n        //xhr对象\r\n        const xhr = new XMLHttpRequest();\r\n        //准备数据\r\n        const fd = new FormData();\r\n\r\n        const successFn = res => {\r\n            const response = JSON.parse(xhr.responseText);\r\n            let uploadResData;\r\n            if (regImg.test(filemime)) {\r\n                uploadResData = Object.assign(response.data);\r\n            } else {\r\n                uploadResData = Object.assign(response.data);\r\n            }\r\n            media.success({\r\n                url: uploadResData.url,\r\n                name: uploadResData.fileName,\r\n                meta: {\r\n                    controls: true, // 指定音视频是否显示控制栏\r\n                    poster: uploadResData.poster\r\n                }\r\n            });\r\n        };\r\n        const progressFn = event => {\r\n            // 上传进度发生变化时调用param.progress\r\n            media.progress((event.loaded / event.total) * 100);\r\n        };\r\n        const errorFn = response => {\r\n            // 上传发生错误时调用param.error\r\n            media.error({\r\n                msg: 'unable to upload.'\r\n            });\r\n        };\r\n        xhr.upload.addEventListener('progress', progressFn, false);\r\n        //异步请求成功实践监听\r\n        xhr.addEventListener('load', successFn, false);\r\n        //异步请求失败事件监听\r\n        xhr.addEventListener('err', errorFn, false);\r\n        //添加数据\r\n        fd.append('image', media.file);\r\n        //建立连接 type url\r\n        xhr.open('POST', serverUrl, true);\r\n        //发送数据\r\n        xhr.send(fd);\r\n    };\r\n    //验证文件大小不能超过30M\r\n    myValidateFn = file => {\r\n        return file.size < 1024 * 40000;\r\n    };\r\n    //富文本编辑器的钩子函数\r\n    hooksConfig = {\r\n        'remove-medias': async file => {\r\n            let result = 0;\r\n            for (let fileObj of file) {\r\n                let fileName = fileObj.name;\r\n                result = await reqDeleteFile({ fileName });\r\n            }\r\n            if (result.status === 0) {\r\n                message.success(result.msg);\r\n            }\r\n        }\r\n    };\r\n    //父组件获取富文本内的值\r\n    getProductDetail = () => {\r\n        // 返回输入数据对应的html格式的文本\r\n        return this.state.editorState.toHTML();\r\n    };\r\n\r\n    render() {\r\n        const { editorState } = this.state;\r\n        const extendControls = [\r\n            {\r\n                key: 'custom-button',\r\n                type: 'button',\r\n                text: '预览',\r\n                onClick: this.preview\r\n            }\r\n        ];\r\n        const excludeControls = ['code'];\r\n        return (\r\n            <div>\r\n                <div className=\"editor-wrapper\">\r\n                    <BraftEditor\r\n                        style={{ border: '1px solid #d9d9d9' }}\r\n                        contentStyle={{ height: '300px' }}\r\n                        placeholder=\"请输入商品详情\"\r\n                        value={editorState}\r\n                        onChange={this.contentChange}\r\n                        excludeControls={excludeControls}\r\n                        extendControls={extendControls}\r\n                        media={{ uploadFn: this.uploadMedia, validateFn: this.myValidateFn }}\r\n                        hooks={this.hooksConfig}\r\n                        id=\"editor-with-color-picker\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nRichText.propTypes = {\r\n    productDetail: PropTypes.string\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Card, Icon, Form, Input, Cascader, Button, InputNumber, message } from 'antd';\r\nimport LinkButton from '../../components/linkbutton';\r\nimport UploadPicture from './UploadPicture';\r\nimport RichText from './RichText';\r\nimport { reqFirstLevelCategorys, reqSecondaryCategorys, reqAddProduct, reqUpdateProduct , reqSecondaryId} from '../../api';\r\nimport sessionUtils from '../../utils/sessionUtils';\r\nimport { dateFomatter } from '../../utils/dateUtils';\r\nconst { Item } = Form;\r\n\r\nclass AddUpdateProduct extends Component {\r\n    state = {\r\n        categoryOptions: [], //商品分类级联下拉框\r\n        secondaryId:''\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        // 创建用来保存ref标识的标签对象的容器\r\n        this.uploadImg = React.createRef();\r\n        this.productDetailRT = React.createRef();\r\n    }\r\n    //获取一级产品分类\r\n    getCategorys = async () => {\r\n        const result = await reqFirstLevelCategorys();\r\n        if (result.status === 0) {\r\n            this.initOptions(result.data);\r\n        }\r\n    };\r\n    //初始化一级分类级联框\r\n    initOptions = async firstLevelCategorys => {\r\n        const categoryOptions = firstLevelCategorys.map(category => ({\r\n            value: category.id,\r\n            label: category.name,\r\n            isLeaf: false\r\n        }));\r\n        const { isUpdate, product } = this;\r\n        let secondaryCategoryOptions;\r\n        if(isUpdate){\r\n            let result = await reqSecondaryCategorys(product.goods_category_id);\r\n            if (result.status === 0) {\r\n                let secondaryCategorys = result.data;\r\n                secondaryCategoryOptions = secondaryCategorys.map(category => ({\r\n                    value: category.id,\r\n                    label: category.name,\r\n                    isLeaf: true\r\n                }));\r\n            }\r\n            const targetOption = categoryOptions.find( option => \r\n                option.value === product.goods_category_id\r\n            )\r\n            targetOption.children = secondaryCategoryOptions;\r\n            this.getSecondaryCategoryId();\r\n        }\r\n        this.setState({\r\n            categoryOptions\r\n        });\r\n    };\r\n    //获得二级分类ID\r\n    getSecondaryCategoryId = async () => {\r\n        if(this.isUpdate){\r\n            const { goods_category_id, goods_category_name} = this.product;\r\n            let result = await reqSecondaryId({goods_category_id, goods_category_name});\r\n            if(result.status === 0){\r\n                let secondaryId = result.data;\r\n                this.setState({secondaryId})\r\n            }\r\n        }\r\n    }\r\n    onChange = (value, selectedOptions) => {\r\n        console.log(value, selectedOptions);\r\n    };\r\n    //根据一级分类初始化二级分类级联框 selectedOptions： 当前选中的级联框, 是一个含有选中选项的对象数组 [{value: 'xxx', label:'xx', isLeaf: 'xx'}]\r\n    loadSecondaryCategoryData = async selectedOptions => {\r\n        const targetOption = selectedOptions[selectedOptions.length - 1];\r\n        let result = await reqSecondaryCategorys(targetOption.value);\r\n        if (result.status === 0) {\r\n            let secondaryCategorys = result.data;\r\n            targetOption.children = secondaryCategorys.map(category => ({\r\n                value: category.id,\r\n                label: category.name,\r\n                isLeaf: true\r\n            }));\r\n        }\r\n        this.setState({\r\n            options: [...this.state.categoryOptions]\r\n        });\r\n    };\r\n\r\n    //提交产品\r\n    submitProduct = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields(async (error, values) => {\r\n            const imgs = this.uploadImg.current.getImgs();\r\n            const goods_details = this.productDetailRT.current.getProductDetail();\r\n            if (JSON.stringify(imgs) === '[]') {\r\n                message.error('商品图片不能为空');\r\n                return;\r\n            }\r\n            if (goods_details === '<p></p>') {\r\n                message.error('商品详情不能为空');\r\n                return;\r\n            }\r\n            if (!error) {\r\n                const { categoryOptions } = this.state;\r\n                let goods_img = imgs.join('#');\r\n                let goods_category_id = values.goods_category_id[0];\r\n                let goods_category_name;\r\n                let goods_first_categoryName;\r\n                for (let selectOption of categoryOptions) {\r\n                    if (selectOption.value === goods_category_id) {\r\n                        goods_first_categoryName = selectOption.label;\r\n                        for (let childOption of selectOption.children) {\r\n                            if (childOption.value === values.goods_category_id[1]) {\r\n                                goods_category_name = childOption.label;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                let result ;\r\n                if(this.isUpdate){\r\n                    let goods_id = this.product.goods_id;\r\n                    result = await reqUpdateProduct({\r\n                        ...values,\r\n                        goods_details,\r\n                        goods_img,\r\n                        goods_category_id,\r\n                        goods_category_name,\r\n                        goods_id,\r\n                        goods_first_categoryName\r\n                    });\r\n                }else{\r\n                    let goods_by_user_id = sessionUtils.getStaff().staff.staffId;\r\n                    let goods_hot = 0;\r\n                    let goods_status = 0;\r\n                    let goods_publish_time = Number(dateFomatter(Date.now()));\r\n                    result = await reqAddProduct({\r\n                        ...values,\r\n                        goods_details,\r\n                        goods_img,\r\n                        goods_category_id,\r\n                        goods_hot,\r\n                        goods_status,\r\n                        goods_by_user_id,\r\n                        goods_publish_time,\r\n                        goods_category_name,\r\n                        goods_first_categoryName\r\n                    });\r\n                }\r\n                if (result.status === 0) {\r\n                    message.success(`${this.isUpdate ? '修改' : '添加'}商品成功`);\r\n                    this.props.history.goBack();\r\n                } else {\r\n                    message.error(`${this.isUpdate ? '修改' : '添加'}商品成功`);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    componentWillMount() {\r\n        const product = JSON.parse(sessionStorage.getItem('product'));\r\n        this.isUpdate = !!product;\r\n        this.product = product || {};\r\n    }\r\n\r\n    //获取一级/二级分类选项\r\n    componentDidMount() {\r\n        this.getCategorys();\r\n    }\r\n    componentWillUnmount(){\r\n        sessionStorage.removeItem('product');\r\n    }\r\n    render() {\r\n        const { categoryOptions, secondaryId } = this.state;\r\n        const { product } = this;\r\n        const {\r\n            goods_title,\r\n            goods_price,\r\n            goods_img,\r\n            goods_details,\r\n            goods_description,\r\n            goods_contact_qq,\r\n            goods_contact_phone,\r\n            goods_category_id,\r\n            goods_id\r\n        } = product;\r\n        const imgs = goods_img? goods_img.split('#') : [];\r\n        const categoryIds = [];\r\n        if(this.isUpdate){\r\n            categoryIds.push(goods_category_id);\r\n            categoryIds.push(secondaryId);\r\n        }\r\n        const title = (\r\n            <span>\r\n                <LinkButton>\r\n                    <Icon\r\n                        type=\"arrow-left\"\r\n                        style={{ marginRight: 10, fontSize: 20, verticalAlign: 'center' }}\r\n                        onClick={() => this.props.history.goBack()}\r\n                    />\r\n                </LinkButton>\r\n                <span>添加商品</span>\r\n            </span>\r\n        );\r\n        const { getFieldDecorator } = this.props.form;\r\n        const formItemLayout = {\r\n            labelCol: { span: 3 },\r\n            wrapperCol: { span: 10 }\r\n        };\r\n        return (\r\n            <div>\r\n                <Card title={title}>\r\n                    <Form {...formItemLayout}>\r\n                        <Item label=\"商品名称\">\r\n                            {getFieldDecorator('goods_title', {\r\n                                initialValue: goods_title,\r\n                                rules: [{ required: true, message: '输入商品名称不能为空', whitespace: true }]\r\n                            })(<Input placeholder=\"请输入商品名称\" allowClear />)}\r\n                        </Item>\r\n                        <Item label=\"商品价格\">\r\n                            {getFieldDecorator('goods_price', {\r\n                                initialValue: goods_price,\r\n                                rules: [{ required: true, message: '商品价格不能为空' }]\r\n                            })(\r\n                                <InputNumber\r\n                                    style={{ width: '100%' }}\r\n                                    formatter={value => `¥ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                    parser={value => value.replace(/¥\\s?|(,*)/g, '')}\r\n                                    min={0}\r\n                                    max={10000000}\r\n                                />\r\n                            )}\r\n                        </Item>\r\n                        <Item label=\"商品描述\">\r\n                            {getFieldDecorator('goods_description', {\r\n                                initialValue: goods_description,\r\n                                rules: [{ required: true, message: '商品描述不能为空' }]\r\n                            })(<Input placeholder=\"请输入商品描述\" allowClear />)}\r\n                        </Item>\r\n                        <Item label=\"商品分类\">\r\n                            {getFieldDecorator('goods_category_id', {\r\n                                initialValue: categoryIds,\r\n                                rules: [{ required: true, message: '商品品类不能为空' }]\r\n                            })(\r\n                                <Cascader\r\n                                    expandTrigger=\"hover\"\r\n                                    placeholder=\"请指定商品分类\"\r\n                                    options={categoryOptions}\r\n                                    loadData={this.loadSecondaryCategoryData}\r\n                                    onChange={this.onChange}\r\n                                    allowClear\r\n                                />\r\n                            )}\r\n                        </Item>\r\n                        <Item label=\"电话号码\">\r\n                            {getFieldDecorator('goods_contact_phone', {\r\n                                initialValue:goods_contact_phone,\r\n                                validateTrigger: 'onBlur',\r\n                                rules: [\r\n                                    { required: true, message: '手机号不能为空', whitespace: true },\r\n                                    {\r\n                                        pattern: /^1[3456789]\\d{9}$/,\r\n                                        message: '请输入正确的手机号码'\r\n                                    }\r\n                                ]\r\n                            })(<Input placeholder=\"请输入手机号\"  allowClear/>)}\r\n                        </Item>\r\n                        <Item label=\"QQ号\">\r\n                            {getFieldDecorator('goods_contact_qq', {\r\n                                initialValue: goods_contact_qq,\r\n                                validateTrigger: 'onBlur',\r\n                                rules: [\r\n                                    { required: true, message: 'QQ号不能为空', whitespace: true },\r\n                                    {\r\n                                        pattern: /^[1-9][0-9]{4,9}$/gim,\r\n                                        message: '请输入正确的QQ号码'\r\n                                    }\r\n                                ]\r\n                            })(<Input placeholder=\"请输入QQ号\" allowClear/>)}\r\n                        </Item>\r\n                        <Item label=\"商品图片\" required>\r\n                            <UploadPicture ref={this.uploadImg} imgs={imgs} isUpdate={this.isUpdate} productId={goods_id}/>\r\n                        </Item>\r\n                        <Item label=\"商品详情\" labelCol={{ span: 3 }} wrapperCol={{ span: 18 }} required>\r\n                            <RichText ref={this.productDetailRT} productDetail={goods_details}/>\r\n                        </Item>\r\n                        <Item wrapperCol={{ offset: 3 }}>\r\n                            <Button type=\"primary\" onClick={this.submitProduct}>\r\n                                提交\r\n                            </Button>\r\n                        </Item>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Form.create()(AddUpdateProduct);\r\n","import React, { Component } from 'react';\r\nimport { Card, List, Icon, Avatar, Modal } from 'antd';\r\nimport LinkButton from '../../components/linkbutton';\r\nimport { IMG_URL } from '../../utils/constants';\r\nimport './productdetail.less';\r\nimport { reqUserMsg } from '../../api/index';\r\nconst Item = List.Item;\r\n\r\nexport default class ProductDetail extends Component {\r\n    state = {\r\n        userMsg: {}, //发布商品的用户信息\r\n        previewVisible: false, //图片大图是否可见\r\n        previewImage: '' //modal对话框显示的图片名\r\n    };\r\n    //获取发布商品用户的信息\r\n    showBigImg = imgsrc => {\r\n        this.setState({ previewVisible: true, previewImage: IMG_URL + imgsrc });\r\n    };\r\n    getPublishGoodsUserMsg = async goods_by_user_id => {\r\n        let result = await reqUserMsg({ goods_by_user_id });\r\n        if (result.status === 0) {\r\n            this.setState({\r\n                userMsg: result.data\r\n            });\r\n        }\r\n    };\r\n    handleCancel = () => {\r\n        this.setState({\r\n            previewVisible: false\r\n        });\r\n    };\r\n    componentWillMount() {\r\n        //路由错误处理\r\n        if(sessionStorage.getItem('product') === null){\r\n            this.product = {};\r\n        }else{\r\n            this.product = JSON.parse(sessionStorage.getItem('product')) ;\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const { goods_by_user_id } = this.product ;\r\n        this.getPublishGoodsUserMsg(goods_by_user_id);\r\n    }\r\n    componentWillUnmount () {\r\n        sessionStorage.removeItem('product');\r\n      }\r\n    render() {\r\n        const { user_name, user_status, user_img } = this.state.userMsg;\r\n        const { previewVisible, previewImage } = this.state;\r\n        const {\r\n            goods_title,\r\n            goods_status,\r\n            goods_publish_time,\r\n            goods_price,\r\n            goods_img,\r\n            goods_hot,\r\n            goods_details,\r\n            goods_description,\r\n            goods_contact_qq,\r\n            goods_contact_phone,\r\n            goods_category_name\r\n        } = this.product ;\r\n        const goodsStatus = goods_status ? '下架' : '在售';\r\n        const userStatus = user_status ? '未认证' : '已认证';\r\n        const productImgs = goods_img ? goods_img.split('#') : [];\r\n        const gridStyle = {\r\n            width: '33.3%',\r\n            textAlign: 'center',\r\n            padding: '10px'\r\n        };\r\n        const productGridStyle = {\r\n            width: '50%'\r\n        };\r\n        const title = (\r\n            <span>\r\n                <LinkButton>\r\n                    <Icon\r\n                        type=\"arrow-left\"\r\n                        style={{ marginRight: 10, fontSize: 20, verticalAlign: 'center' }}\r\n                        onClick={() => this.props.history.goBack()}\r\n                    />\r\n                </LinkButton>\r\n\r\n                <span>商品详情</span>\r\n            </span>\r\n        );\r\n\r\n        return (\r\n            <Card title={title} bordered={false} className=\"product\">\r\n                <Card>\r\n                    <Card.Grid style={productGridStyle}>\r\n                        {' '}\r\n                        <List size=\"small\" split={false}>\r\n                            <Item>\r\n                                <p className=\"goods-showtitle\">{goods_title}</p>\r\n                            </Item>\r\n                            <Item>\r\n                                <div className=\"goods-showprice\">\r\n                                    &nbsp;&nbsp;&nbsp;&nbsp;￥<span className=\"goods-showpircenum\">{goods_price}</span>\r\n                                </div>\r\n                            </Item>\r\n                            <Item>\r\n                                <Item.Meta\r\n                                    avatar={<Avatar src={IMG_URL + user_img} />}\r\n                                    title={user_name}\r\n                                    description={userStatus}\r\n                                />\r\n                            </Item>\r\n                            <Item>商品描述：&nbsp;&nbsp;{goods_description}</Item>\r\n                            <Item>商品分类：&nbsp;&nbsp;{goods_category_name}</Item>\r\n                            <Item>联系电话：&nbsp;&nbsp;{goods_contact_phone}</Item>\r\n                            <Item>联系QQ： &nbsp;&nbsp;&nbsp;{goods_contact_qq}</Item>\r\n                            <Item>发布时间：&nbsp;&nbsp;{goods_publish_time}</Item>\r\n                            <Item>点击量： &nbsp;&nbsp;&nbsp;&nbsp;{goods_hot}</Item>\r\n                            <Item>商品状态：&nbsp;&nbsp;{goodsStatus}</Item>\r\n                        </List>\r\n                    </Card.Grid>\r\n                    <Card.Grid style={productGridStyle}>\r\n                        商品图片：\r\n                        <br />\r\n                        <Card className=\"productDetailImg\">\r\n                            {productImgs.map((imgsrc, key) => (\r\n                                <Card.Grid style={gridStyle} key={key}>\r\n                                    <img\r\n                                        src={IMG_URL + imgsrc}\r\n                                        key={key}\r\n                                        alt=\"商品图片\"\r\n                                        onClick={() => {\r\n                                            this.showBigImg(imgsrc);\r\n                                        }}\r\n                                    />\r\n                                </Card.Grid>\r\n                            ))}\r\n                        </Card>\r\n                        商品详情：\r\n                        <Card bordered={false}>\r\n                            <span dangerouslySetInnerHTML={{ __html: goods_details }} className=\"detail\">\r\n                            </span>\r\n                        </Card>\r\n                        <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\r\n                            <img alt=\"商品大图\" style={{ width: '100%' }} src={previewImage} />\r\n                        </Modal>\r\n                    </Card.Grid>\r\n                </Card>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n","import Login from '../views/login';\r\nimport Admin from '../views/admin';\r\nimport Home from '../views/home';\r\nimport Category from '../views/category';\r\nimport Product from '../views/product';\r\nimport ProductList from '../views/product/Product';\r\nimport User from '../views/user';\r\nimport Role from '../views/role';\r\nimport Bar from '../views/charts/Bar';\r\nimport Pie from '../views/charts/Pie';\r\nimport Line from '../views/charts/Line';\r\nimport Address from '../views/address';\r\nimport AddUpdateProduct from '../views/product/AddUpdateProduct';\r\nimport ProductDetail from '../views/product/ProductDetail';\r\n//前端路由模块\r\nconst routes = [\r\n    {\r\n        path: '/login',\r\n        exact: true,\r\n        component: Login\r\n    },\r\n    {\r\n        path: '/',\r\n        component: Admin,\r\n        routes: [\r\n            {\r\n                path: '/home',\r\n                component: Home\r\n            },\r\n            {\r\n                path: '/products/category',\r\n                component: Category\r\n            },\r\n            {\r\n                path: '/products/product',\r\n                component: Product,\r\n                routes: [\r\n                    {\r\n                        path: '/products/product/showproduct',\r\n                        component: ProductList\r\n                    },\r\n                    {\r\n                        path: '/products/product/editproduct',\r\n                        component: AddUpdateProduct\r\n                    },\r\n                    {\r\n                        path: '/products/product/productdetail',\r\n                        component: ProductDetail\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                path: '/user',\r\n                component: User\r\n            },\r\n            {\r\n                path: '/role',\r\n                component: Role\r\n            },\r\n            {\r\n                path: '/charts/bar',\r\n                component: Bar\r\n            },\r\n            {\r\n                path: '/charts/pie',\r\n                component: Pie\r\n            },\r\n            {\r\n                path: '/charts/line',\r\n                component: Line\r\n            },\r\n            {\r\n                path: '/address',\r\n                component: Address\r\n            }\r\n        ]\r\n    }\r\n];\r\nexport default routes;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { LocaleProvider } from 'antd';\r\nimport zh_CN from 'antd/es/locale-provider/zh_CN';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render( <LocaleProvider locale={zh_CN}><App /></LocaleProvider>, document.getElementById('mallmanasys'));\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\nimport routes from './router/routes';\r\nimport RouteWithSubRoutes from './router/RouteWithSubRoutes';\r\nimport { HashRouter, Switch } from 'react-router-dom';\r\n// import { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nexport default function App(props) {\r\n    return (\r\n        <HashRouter>\r\n             {/* <Route\r\n                render={({ location }) => (\r\n                    //定义路由间页面切换动画效果\r\n                   <TransitionGroup className='router-transition'>\r\n                         <CSSTransition\r\n                            key={location.key}\r\n                            classNames=\"rootFade\"\r\n                            timeout={300}\r\n                            transitionLeave={false}\r\n                        >\r\n                            <Switch location={location}>\r\n                                {routes.map((route, key) => (\r\n                                    <RouteWithSubRoutes {...route} key={key} />\r\n                                ))}\r\n                            </Switch>\r\n                        </CSSTransition>\r\n                    </TransitionGroup>)\r\n                }\r\n                /> */}\r\n            <Switch>\r\n                {routes.map((route, key) => (\r\n                    <RouteWithSubRoutes {...route} key={key} />\r\n                ))}\r\n            </Switch> \r\n        </HashRouter>\r\n    );\r\n}\r\n"],"sourceRoot":""}